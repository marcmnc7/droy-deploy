{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/pages/Builder.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../contexts/dataContext';\nimport PropTypes from 'prop-types';\nimport UserComponentBase from '../components/droy/UserComponentBase';\nimport ComponentsSelectorBar from '../components/droy/ComponentsSelectorBar';\nimport NavBar from '../components/droy/NavBar';\nimport Loading from '../components/droy/Loading';\nimport '../styles/builder.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reorder = (list, startIndex, endIndex) => {\n      const result = Array.from(list);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n      return result;\n    };\n\n    this.onDragEnd = result => {\n      if (!result.destination) {\n        return;\n      }\n\n      console.log();\n      const items = this.reorder(this.props.userLayoutObj, result.source.index, result.destination.index);\n      this.props.updateOrder(items);\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        match,\n        getProjectInfo\n      } = this.props;\n      await getProjectInfo(match.params.projectId);\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.showUserComponents = () => {\n      const {\n        userLayoutObj,\n        dataError\n      } = this.props;\n      if (!userLayoutObj.length) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-component-base\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"image-emptyBuilder\",\n        src: \"/img/empty-icon.png\",\n        alt: \"empty-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-noComponents\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"Start picking one component from the left!\"));\n      if (dataError) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 27\n        }\n      }, dataError);\n      return userLayoutObj.map((c, i) => {\n        return /*#__PURE__*/React.createElement(Droppable, {\n          droppableId: \"droppable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Draggable, {\n          key: c.code,\n          draggableId: c.code,\n          index: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(UserComponentBase, {\n          componentStyle: c.componentStyle,\n          componentOptions: c.componentOptions,\n          code: c.code,\n          key: c.code,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        }))), provided.placeholder));\n      });\n    };\n\n    this.state = {\n      isLoading: true\n    };\n  } // a little function to help us with reordering the result\n\n\n  render() {\n    const {\n      mode\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      withOptions: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 60\n      }\n    })), !isLoading && mode === \"edit\" && /*#__PURE__*/React.createElement(ComponentsSelectorBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, !isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 30\n      }\n    }, this.showUserComponents()))));\n  }\n\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n};\nexport default withData(Builder);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/pages/Builder.js"],"names":["React","Component","withData","PropTypes","UserComponentBase","ComponentsSelectorBar","NavBar","Loading","DragDropContext","Droppable","Draggable","Builder","constructor","props","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","destination","console","log","items","userLayoutObj","source","index","updateOrder","componentDidMount","match","getProjectInfo","params","projectId","setState","isLoading","showUserComponents","dataError","length","map","c","i","provided","snapshot","droppableProps","innerRef","code","draggableProps","dragHandleProps","componentStyle","componentOptions","placeholder","state","render","mode","propTypes","array","saveInfoToContext","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../contexts/dataContext'\nimport PropTypes from 'prop-types'\nimport UserComponentBase from '../components/droy/UserComponentBase'\nimport ComponentsSelectorBar from '../components/droy/ComponentsSelectorBar'\nimport NavBar from '../components/droy/NavBar'\nimport Loading from '../components/droy/Loading'\nimport '../styles/builder.css'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  // a little function to help us with reordering the result\n  reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  onDragEnd = (result) => {\n    if (!result.destination) {\n      return\n    }\n    console.log()\n    const items = this.reorder(\n      this.props.userLayoutObj,\n      result.source.index,\n      result.destination.index\n    )\n    this.props.updateOrder(items)\n  }\n\n  /* Updates data context with the actual project information */\n  componentDidMount = async () => {\n    const { match, getProjectInfo } = this.props\n    await getProjectInfo(match.params.projectId)\n    this.setState({ isLoading: false })\n  }\n\n  /* Loops over project info in data context to print user components */\n  /* If not components found, prints a pretty message */\n  showUserComponents = () => {\n    const { userLayoutObj, dataError } = this.props\n    if (!userLayoutObj.length) return (\n      <div className='empty-component-base'>\n        <img className='image-emptyBuilder' src='/img/empty-icon.png' alt='empty-icon' />\n        <p className='text-noComponents'>Start picking one component from the left!</p>\n      </div>)\n    if (dataError) return <div>{dataError}</div>\n    return userLayoutObj.map((c, i) => {\n      return (\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div {...provided.droppableProps} ref={provided.innerRef}>\n                <Draggable key={c.code} draggableId={c.code} index={i}>\n                    {(provided, snapshot) => (\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <UserComponentBase componentStyle={c.componentStyle} componentOptions={c.componentOptions} code={c.code} key={c.code} />\n                      </div>\n                    )}\n                  </Draggable>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n      )\n    })\n  }\n\n  render() {\n    const { mode } = this.props\n    const { isLoading } = this.state\n    return (\n      <div>\n        <NavBar withOptions />\n        <div className=\"main-builder\">\n          {isLoading && <div className='loading-container'><Loading /></div>}\n          {!isLoading && mode === \"edit\" && <ComponentsSelectorBar />}\n          <DragDropContext onDragEnd={this.onDragEnd}>\n              {!isLoading && <div className=\"components-builder\">{this.showUserComponents()}</div>}\n          </DragDropContext>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n}\n\nexport default withData(Builder)\n"]},"metadata":{},"sourceType":"module"}