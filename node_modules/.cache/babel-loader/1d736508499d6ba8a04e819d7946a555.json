{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst DataContext = React.createContext(); // Consumer Wrapper\n\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, props => /*#__PURE__*/React.createElement(Comp, Object.assign({}, this.props, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }\n      })));\n    }\n\n  };\n}; // Provider def\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUserLayoutObjToContext = userLayoutObj => {\n      for (const component of apiInfo) saveComponentInfoToContext(component.info, component.code);\n    };\n\n    this.saveComponentInfoToContext = (componentInfo, componentCode) => {\n      const {\n        userLayoutObj\n      } = this;\n      const existingComponent = userLayoutObj.filter(c => c.code === componentCode);\n\n      if (existingComponent.length) {\n        userLayoutObj.map(c => {\n          if (c => c.code === componentCode) Object.assign(c.info, componentInfo);\n        });\n      } else {\n        userLayoutObj.push({\n          info: componentInfo,\n          code: componentCode\n        });\n      }\n\n      this.userLayoutObj = userLayoutObj;\n    };\n\n    this.getUserLayoutObj = () => this.userLayoutObj;\n\n    this.userLayoutObj = [];\n  }\n\n  render() {\n    const {\n      children,\n      code\n    } = this.props;\n    const {\n      userLayoutObj\n    } = this;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getUserLayoutObj: this.getUserLayoutObj,\n        userLayoutObj\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js"],"names":["React","Component","PropTypes","DataContext","createContext","withData","Comp","WithData","render","props","DataProvider","constructor","saveUserLayoutObjToContext","userLayoutObj","component","apiInfo","saveComponentInfoToContext","info","code","componentInfo","componentCode","existingComponent","filter","c","length","map","Object","assign","push","getUserLayoutObj","children","propTypes","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AACtCO,IAAAA,MAAM,GAAI;AACR,0BACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KAAD,iBAAW,oBAAC,IAAD,oBAAU,KAAKA,KAAf,EAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADf,CADF;AAKD;;AAPqC,GAAxC;AASD,CAVM,C,CAYP;;AACA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAEnCU,EAAAA,WAAW,CAACF,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBG,0BALkB,GAKYC,aAAD,IAAmB;AAC9C,WAAK,MAAMC,SAAX,IAAwBC,OAAxB,EAAiCC,0BAA0B,CAACF,SAAS,CAACG,IAAX,EAAiBH,SAAS,CAACI,IAA3B,CAA1B;AAClC,KAPiB;;AAAA,SASlBF,0BATkB,GASW,CAACG,aAAD,EAAgBC,aAAhB,KAAkC;AAC7D,YAAM;AAAEP,QAAAA;AAAF,UAAoB,IAA1B;AACA,YAAMQ,iBAAiB,GAAGR,aAAa,CAACS,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACL,IAAF,KAAWE,aAArC,CAA1B;;AACA,UAAGC,iBAAiB,CAACG,MAArB,EAA6B;AAC3BX,QAAAA,aAAa,CAACY,GAAd,CAAkBF,CAAC,IAAI;AACrB,cAAGA,CAAC,IAAIA,CAAC,CAACL,IAAF,KAAWE,aAAnB,EAAkCM,MAAM,CAACC,MAAP,CAAcJ,CAAC,CAACN,IAAhB,EAAsBE,aAAtB;AACnC,SAFD;AAGD,OAJD,MAIO;AACLN,QAAAA,aAAa,CAACe,IAAd,CAAmB;AAAEX,UAAAA,IAAI,EAAEE,aAAR;AAAuBD,UAAAA,IAAI,EAAEE;AAA7B,SAAnB;AACD;;AACD,WAAKP,aAAL,GAAqBA,aAArB;AACD,KApBiB;;AAAA,SAsBlBgB,gBAtBkB,GAsBC,MAAM,KAAKhB,aAtBZ;;AAEhB,SAAKA,aAAL,GAAqB,EAArB;AACD;;AAqBDL,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEsB,MAAAA,QAAF;AAAYZ,MAAAA;AAAZ,QAAqB,KAAKT,KAAhC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAoB,IAA1B;AACA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAC3BG,QAAAA,0BAA0B,EAAE,KAAKA,0BADN;AAE3Ba,QAAAA,gBAAgB,EAAE,KAAKA,gBAFI;AAG3BhB,QAAAA;AAH2B,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGiB,QALH,CADF;AASD;;AAtCkC;;AAyCrCpB,YAAY,CAACqB,SAAb,GAAyB;AACvBD,EAAAA,QAAQ,EAAE5B,SAAS,CAAC8B;AADG,CAAzB;AAIA,eAAetB,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DataContext = React.createContext()\n\n// Consumer Wrapper\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render () {\n      return (\n        <DataContext.Consumer>\n          { (props) => <Comp {...this.props} {...props} /> }\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\n// Provider def\nclass DataProvider extends Component {\n\n  constructor(props){\n    super(props)\n    this.userLayoutObj = []\n  }\n\n  saveUserLayoutObjToContext = (userLayoutObj) => {\n    for (const component of apiInfo) saveComponentInfoToContext(component.info, component.code)\n  }\n\n  saveComponentInfoToContext = (componentInfo, componentCode) => {\n    const { userLayoutObj } = this\n    const existingComponent = userLayoutObj.filter(c => c.code === componentCode)\n    if(existingComponent.length) {\n      userLayoutObj.map(c => {\n        if(c => c.code === componentCode) Object.assign(c.info, componentInfo)\n      })\n    } else {\n      userLayoutObj.push({ info: componentInfo, code: componentCode })\n    }\n    this.userLayoutObj = userLayoutObj\n  };\n\n  getUserLayoutObj = () => this.userLayoutObj\n\n  render () {\n    const { children, code } = this.props\n    const { userLayoutObj } = this\n    return (\n      <DataContext.Provider value={{\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getUserLayoutObj: this.getUserLayoutObj,\n        userLayoutObj,\n      }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}