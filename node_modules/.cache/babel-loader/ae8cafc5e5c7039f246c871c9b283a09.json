{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/OnlyNotLoggedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction OnlyNotLoggedRoute(props) {\n  const {\n    authLoading,\n    isLoggedIn,\n    component: Comp,\n    location,\n    ...rest\n  } = props;\n  if (authLoading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 27\n    }\n  }); // It's good????\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Comp, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n}\n\nOnlyNotLoggedRoute.propTypes = {\n  component: PropTypes.func,\n  isLoggedIn: PropTypes.bool,\n  location: PropTypes.string,\n  authLoading: PropTypes.bool\n};\nexport default OnlyNotLoggedRoute;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/OnlyNotLoggedRoute.js"],"names":["React","Route","Redirect","PropTypes","OnlyNotLoggedRoute","props","authLoading","isLoggedIn","component","Comp","location","rest","pathname","state","from","propTypes","func","bool","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,kBAAT,CAA6BC,KAA7B,EAAoC;AAClC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA,SAAS,EAAEC,IAAtC;AAA4CC,IAAAA,QAA5C;AAAsD,OAAGC;AAAzD,MAAkEN,KAAxE;AACA,MAAIC,WAAJ,EAAiB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAFiB,CAEE;;AACpC,sBACE,oBAAC,KAAD,oBAAWK,IAAX;AAAiB,IAAA,MAAM,EACpBN,KAAD,IAAWE,UAAU,gBACjB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEK,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ;AAAR;AAAxB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,gBAEjB,oBAAC,IAAD,oBAAUL,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD;;AAEDD,kBAAkB,CAACW,SAAnB,GAA+B;AAC7BP,EAAAA,SAAS,EAAEL,SAAS,CAACa,IADQ;AAE7BT,EAAAA,UAAU,EAAEJ,SAAS,CAACc,IAFO;AAG7BP,EAAAA,QAAQ,EAAEP,SAAS,CAACe,MAHS;AAI7BZ,EAAAA,WAAW,EAAEH,SAAS,CAACc;AAJM,CAA/B;AAOA,eAAeb,kBAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nfunction OnlyNotLoggedRoute (props) {\n  const { authLoading, isLoggedIn, component: Comp, location, ...rest } = props\n  if (authLoading) return <div></div> // It's good????\n  return (\n    <Route {...rest} render={\n      (props) => isLoggedIn\n        ? <Redirect to={{ pathname: '/', state: { from: location } }} />\n        : <Comp {...props} />\n    }\n    />\n  )\n}\n\nOnlyNotLoggedRoute.propTypes = {\n  component: PropTypes.func,\n  isLoggedIn: PropTypes.bool,\n  location: PropTypes.string,\n  authLoading: PropTypes.bool\n}\n\nexport default OnlyNotLoggedRoute\n"]},"metadata":{},"sourceType":"module"}