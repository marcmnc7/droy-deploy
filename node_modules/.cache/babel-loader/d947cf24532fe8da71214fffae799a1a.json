{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/pages/Builder.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../contexts/dataContext';\nimport PropTypes from 'prop-types';\nimport UserComponentBase from '../components/droy/UserComponentBase';\nimport ComponentsSelectorBar from '../components/droy/ComponentsSelectorBar';\nimport NavBar from '../components/droy/NavBar';\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.moveDownComponent = elementCode => {\n      const {\n        copyUserLayoutObjToContext\n      } = this.props;\n      var stateCopy = { ...this.state\n      };\n      let fromIndex = 0;\n      let element;\n\n      for (let i = 0; i < stateCopy.userLayoutObj.length; i++) {\n        const c = stateCopy.userLayoutObj[i];\n\n        if (c.code === elementCode) {\n          element = c;\n          fromIndex = i;\n          break;\n        }\n      }\n\n      if (!element) return;\n      stateCopy.userLayoutObj.splice(fromIndex, 1);\n      stateCopy.userLayoutObj.splice(fromIndex + 1, 0, element); // update context too\n\n      copyUserLayoutObjToContext(stateCopy.userLayoutObj);\n      this.setState(stateCopy);\n    };\n\n    this.showComponents = () => {\n      const {\n        userLayoutObj\n      } = this.state;\n      return userLayoutObj.map(c => {\n        return /*#__PURE__*/React.createElement(UserComponentBase, {\n          moveDownComponent: this.moveDownComponent,\n          info: c.info,\n          code: c.code,\n          key: c.code,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.addComponent = componentCode => {\n      // añade componente\n      const {\n        stateCopy\n      } = { ...this.state\n      };\n      stateCopy.userLayoutObj.push({\n        code: componentCode // info: \n\n      }); // guarda en contexto\n\n      /* this.setState({\n       }) */\n    };\n\n    this.getActualCodeArray = () => {\n      const stateCopy = { ...this.state\n      };\n      console.log(222);\n      let {\n        userLayoutObj\n      } = stateCopy;\n      userLayoutObj = userLayoutObj.map(c => c.code);\n      return userLayoutObj;\n    };\n\n    this.state = {\n      userLayoutObj: []\n    };\n  }\n\n  componentDidMount() {\n    // db petition\n    const {\n      copyUserLayoutObjToContext\n    } = this.props;\n    const apiInfo = [{\n      code: 'ClassicHeading1',\n      info: {\n        text1: 'Default hello',\n        text2: 'default world'\n      }\n    }, {\n      code: 'ClassicHome1',\n      info: {\n        text1: 'aaaa',\n        text2: 'bbbbb'\n      }\n    }];\n    copyUserLayoutObjToContext(apiInfo);\n    this.setState({\n      userLayoutObj: apiInfo\n    });\n  }\n  /* COMPONENTS POSITION */\n\n\n  render() {\n    const {\n      mode\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      withOptions: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, mode === \"edit\" && /*#__PURE__*/React.createElement(ComponentsSelectorBar, {\n      actualUserComponentsIds: this.getActualCodeArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-web-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, this.showComponents())));\n  }\n\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n};\nexport default withData(Builder);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/pages/Builder.js"],"names":["React","Component","withData","PropTypes","UserComponentBase","ComponentsSelectorBar","NavBar","Builder","constructor","props","moveDownComponent","elementCode","copyUserLayoutObjToContext","stateCopy","state","fromIndex","element","i","userLayoutObj","length","c","code","splice","setState","showComponents","map","info","addComponent","componentCode","push","getActualCodeArray","console","log","componentDidMount","apiInfo","text1","text2","render","mode","propTypes","array","saveInfoToContext","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../contexts/dataContext'\nimport PropTypes from 'prop-types'\nimport UserComponentBase from '../components/droy/UserComponentBase'\nimport ComponentsSelectorBar from '../components/droy/ComponentsSelectorBar'\nimport NavBar from '../components/droy/NavBar'\n\n\nclass Builder extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userLayoutObj: [],\n    }\n  }\n\n  componentDidMount () {\n    // db petition\n    const { copyUserLayoutObjToContext } = this.props\n    const apiInfo = [\n      {\n        code: 'ClassicHeading1',\n        info: { text1: 'Default hello', text2: 'default world' }\n      },\n      {\n        code: 'ClassicHome1',\n        info: { text1: 'aaaa', text2: 'bbbbb' }\n      }\n    ]\n    copyUserLayoutObjToContext(apiInfo)\n    this.setState({ userLayoutObj: apiInfo })\n  }\n\n\n  /* COMPONENTS POSITION */\n  moveDownComponent = (elementCode) => {\n    const { copyUserLayoutObjToContext } = this.props\n    var stateCopy = {...this.state}\n    let fromIndex = 0; let element\n    for (let i = 0; i < stateCopy.userLayoutObj.length; i++) {\n      const c = stateCopy.userLayoutObj[i];\n      if(c.code === elementCode){\n        element = c; fromIndex = i\n        break\n      }\n    }\n    if(!element) return\n    stateCopy.userLayoutObj.splice(fromIndex, 1)\n    stateCopy.userLayoutObj.splice(fromIndex + 1, 0, element)\n    // update context too\n    copyUserLayoutObjToContext(stateCopy.userLayoutObj)\n    this.setState(stateCopy)\n  }\n\n  showComponents = () => {\n    const { userLayoutObj } = this.state\n    return userLayoutObj.map((c) => {\n      return <UserComponentBase\n          moveDownComponent={this.moveDownComponent}\n          info={c.info}\n          code={c.code}\n          key={c.code}/>\n    })\n  }\n\n  addComponent = (componentCode) => {\n    // añade componente\n    const { stateCopy } = {...this.state}\n    stateCopy.userLayoutObj.push({\n      code: componentCode,\n      // info: \n    })\n    // guarda en contexto\n    /* this.setState({\n\n    }) */\n  }\n\n  getActualCodeArray = () => {\n    const stateCopy = {...this.state}\n    console.log(222)\n    let { userLayoutObj } = stateCopy\n    userLayoutObj = userLayoutObj.map(c=>c.code)\n    return userLayoutObj\n  }\n\n  render () {\n    const { mode } = this.props\n\n    return (\n      <div>\n        <NavBar withOptions/>\n        <div className=\"main-builder\">\n          {mode === \"edit\" && <ComponentsSelectorBar actualUserComponentsIds={this.getActualCodeArray()}/>}\n          <div className=\"user-web-page\">\n            {this.showComponents()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n}\n\nexport default withData(Builder)\n"]},"metadata":{},"sourceType":"module"}