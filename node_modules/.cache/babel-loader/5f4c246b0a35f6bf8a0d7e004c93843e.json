{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/apiClient';\nimport alias from '../utils/alias';\nconst DataContext = React.createContext();\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, props => /*#__PURE__*/React.createElement(Comp, Object.assign({}, this.props, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 23\n        }\n      })));\n    }\n\n  };\n};\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.switchMode = () => {\n      const {\n        mode\n      } = this.state;\n      this.setState({\n        mode: mode === 'edit' ? 'view' : 'edit'\n      });\n    };\n\n    this.deleteComponent = elementCode => {\n      const {\n        userLayoutObj\n      } = alias.copyObject(this.state);\n      let fromIndex = 0;\n\n      for (let i = 0; i < userLayoutObj.length; i++) {\n        const c = userLayoutObj[i];\n        if (c.code !== elementCode) continue;\n        fromIndex = i;\n        break;\n      }\n\n      userLayoutObj.splice(fromIndex, 1);\n      this.setState({\n        userLayoutObj: userLayoutObj\n      });\n    };\n\n    this.moveComponent = (elementCode, direction) => {\n      const {\n        userLayoutObj\n      } = alias.copyObject(this.state);\n      let fromIndex = 0;\n      let element;\n\n      for (let i = 0; i < userLayoutObj.length; i++) {\n        const c = userLayoutObj[i];\n\n        if (c.code === elementCode) {\n          element = c;\n          fromIndex = i;\n          break;\n        }\n      }\n\n      userLayoutObj.splice(fromIndex, 1);\n      if (direction === 'down') userLayoutObj.splice(fromIndex + 1, 0, element);else if (direction === 'up') userLayoutObj.splice(fromIndex - 1, 0, element);\n      this.setState({\n        userLayoutObj: userLayoutObj\n      });\n    };\n\n    this.addComponent = (componentCode, defaultInfo, componentOptions, componentStyle) => {\n      const {\n        userLayoutObj\n      } = alias.copyObject(this.state);\n      let firstStyle = {};\n\n      for (const attr in defaultInfo) {\n        firstStyle = Object.assign(firstStyle, {\n          [attr]: defaultInfo[attr].style\n        });\n      }\n\n      let firstUserOverrideStyle = {};\n\n      for (const attr in componentStyle) {\n        firstUserOverrideStyle = Object.assign(firstUserOverrideStyle, {\n          [attr]: componentStyle[attr]\n        });\n      }\n\n      userLayoutObj.push({\n        code: componentCode,\n        info: defaultInfo,\n        style: firstStyle,\n        componentOptions,\n        componentUserOverrideStyle: firstUserOverrideStyle\n      });\n      this.setState({\n        userLayoutObj: userLayoutObj\n      });\n    };\n\n    this.save = async projectId => {\n      try {\n        this.setState({\n          savingStep: 'Saving...'\n        });\n        const {\n          userLayoutObj\n        } = this.state;\n        await api.put(`/projects/${projectId}`, {\n          componentsConfiguration: userLayoutObj\n        });\n        setTimeout(() => {\n          this.setState({\n            savingStep: 'OK'\n          });\n          setTimeout(() => {\n            this.setState({\n              savingStep: 'Save'\n            });\n          }, 500);\n        }, 500);\n      } catch (error) {\n        alert(\"Error al guardar. Vuelve a intentarlo\");\n      }\n    };\n\n    this.saveComponentInfoToContext = (componentCode, componentAttr, attrContent) => {\n      const layoutCopy = alias.copyArray(this.state.userLayoutObj);\n      const component = alias.findByCode(layoutCopy, componentCode);\n      const styleOptions = ['fontSize', 'letterSpacing'];\n      let componentStyles = component.style;\n      if (!attrContent) delete component.info[componentAttr];else {\n        component.info[componentAttr] = attrContent;\n\n        for (const option in attrContent.style) {\n          if (!styleOptions.includes(option)) continue;\n          componentStyles = Object.assign(componentStyles, {\n            [componentAttr]: {\n              [option]: attrContent.style[option]\n            }\n          });\n        }\n      }\n      console.log(componentStyles);\n      component.style = componentStyles;\n      this.setState({\n        userLayoutObj: layoutCopy\n      });\n    };\n\n    this.saveUserComponentStyleInfoToContext = (componentCode, newStylePair) => {\n      const {\n        userLayoutObj\n      } = alias.copyObject(this.state);\n      const component = alias.findByCode(userLayoutObj, componentCode);\n      if (!component.componentUserOverrideStyle) component.componentUserOverrideStyle = newStylePair;else Object.assign(component.componentUserOverrideStyle, newStylePair);\n      this.setState({\n        userLayoutObj: userLayoutObj\n      });\n    };\n\n    this.getProjectInfo = async projectId => {\n      try {\n        const {\n          data: {\n            componentsConfiguration,\n            style,\n            _id\n          }\n        } = await api.get(`/projects/${projectId}`);\n        let firstStyle = {};\n\n        for (const key in componentsConfiguration) {\n          const component = componentsConfiguration[key];\n          const componentInfo = component.info;\n\n          for (const attr in componentInfo) {\n            firstStyle = Object.assign(firstStyle, {\n              [attr]: componentInfo[attr].style\n            });\n          }\n\n          component.style = firstStyle;\n        }\n\n        this.setState({\n          projectId: _id,\n          userLayoutObj: componentsConfiguration,\n          projectStyle: style\n        });\n      } catch (error) {\n        this.setState({\n          dataError: \"Unable to get your project data\"\n        });\n      }\n    };\n\n    this.state = {\n      mode: 'edit',\n      userLayoutObj: [],\n      projectStyle: \"\",\n      projectId: \"\",\n      dataError: \"\",\n      savingStep: 'Save'\n    };\n  }\n  /* Switch between edit/view modes */\n\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        saveUserComponentStyleInfoToContext: this.saveUserComponentStyleInfoToContext,\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        deleteComponent: this.deleteComponent,\n        getProjectInfo: this.getProjectInfo,\n        moveComponent: this.moveComponent,\n        addComponent: this.addComponent,\n        switchMode: this.switchMode,\n        save: this.save,\n        ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js"],"names":["React","Component","PropTypes","api","alias","DataContext","createContext","withData","Comp","WithData","render","props","DataProvider","constructor","switchMode","mode","state","setState","deleteComponent","elementCode","userLayoutObj","copyObject","fromIndex","i","length","c","code","splice","moveComponent","direction","element","addComponent","componentCode","defaultInfo","componentOptions","componentStyle","firstStyle","attr","Object","assign","style","firstUserOverrideStyle","push","info","componentUserOverrideStyle","save","projectId","savingStep","put","componentsConfiguration","setTimeout","error","alert","saveComponentInfoToContext","componentAttr","attrContent","layoutCopy","copyArray","component","findByCode","styleOptions","componentStyles","option","includes","console","log","saveUserComponentStyleInfoToContext","newStylePair","getProjectInfo","data","_id","get","key","componentInfo","projectStyle","dataError","children","propTypes","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport api from '../services/apiClient'\nimport alias from '../utils/alias'\n\nconst DataContext = React.createContext()\n\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render() {\n      return (\n        <DataContext.Consumer>\n          {(props) => <Comp {...this.props} {...props} />}\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mode: 'edit',\n      userLayoutObj: [],\n      projectStyle: \"\",\n      projectId: \"\",\n      dataError: \"\",\n      savingStep: 'Save',\n    }\n  }\n\n  /* Switch between edit/view modes */\n  switchMode = () => {\n    const { mode } = this.state\n    this.setState({\n      mode: mode === 'edit' ? 'view' : 'edit'\n    })\n  }\n\n  /* Delete component from main layout */\n  deleteComponent = (elementCode) => {\n    const { userLayoutObj } = alias.copyObject(this.state)\n    let fromIndex = 0;\n    for (let i = 0; i < userLayoutObj.length; i++) {\n      const c = userLayoutObj[i];\n      if (c.code !== elementCode) continue\n      fromIndex = i\n      break\n    }\n    userLayoutObj.splice(fromIndex, 1)\n    this.setState({ userLayoutObj: userLayoutObj })\n  }\n\n  /* Move component position from main layout */\n  moveComponent = (elementCode, direction) => {\n    const { userLayoutObj } = alias.copyObject(this.state)\n    let fromIndex = 0\n    let element\n    for (let i = 0; i < userLayoutObj.length; i++) {\n      const c = userLayoutObj[i];\n      if (c.code === elementCode) {\n        element = c\n        fromIndex = i\n        break\n      }\n    }\n    userLayoutObj.splice(fromIndex, 1)\n    if (direction === 'down') userLayoutObj.splice(fromIndex + 1, 0, element)\n    else if (direction === 'up') userLayoutObj.splice(fromIndex - 1, 0, element)\n    this.setState({ userLayoutObj: userLayoutObj })\n  }\n\n  /* Add new component to actual configurarion */\n  addComponent = (componentCode, defaultInfo, componentOptions, componentStyle) => {\n    const { userLayoutObj } = alias.copyObject(this.state)\n    let firstStyle = {}\n    for (const attr in defaultInfo) {\n      firstStyle = Object.assign(firstStyle, {[attr]: defaultInfo[attr].style})\n    }\n    let firstUserOverrideStyle = {}\n    for (const attr in componentStyle) {\n      firstUserOverrideStyle = Object.assign(firstUserOverrideStyle, {[attr]: componentStyle[attr]})\n    }\n    userLayoutObj.push({\n      code: componentCode,\n      info: defaultInfo,\n      style: firstStyle,\n      componentOptions,\n      componentUserOverrideStyle: firstUserOverrideStyle\n    })\n    this.setState({\n      userLayoutObj: userLayoutObj,\n    })\n  }\n\n  /* Save actual user configuration to BBDD */\n  save = async (projectId) => {\n    try {\n      this.setState({ savingStep: 'Saving...' })\n      const { userLayoutObj } = this.state\n      await api.put(`/projects/${projectId}`, { componentsConfiguration: userLayoutObj })\n      setTimeout(() => {\n        this.setState({ savingStep: 'OK' })\n        setTimeout(() => { this.setState({ savingStep: 'Save' }) }, 500);\n      }, 500);\n    } catch (error) {\n      alert(\"Error al guardar. Vuelve a intentarlo\")\n    }   \n  }\n\n  /* Update content configuration and rerender with it */\n  saveComponentInfoToContext = (componentCode, componentAttr, attrContent) => {\n    const layoutCopy = alias.copyArray(this.state.userLayoutObj)\n    const component = alias.findByCode(layoutCopy, componentCode)\n    const styleOptions = ['fontSize', 'letterSpacing']\n    let componentStyles = component.style\n    if(!attrContent) delete component.info[componentAttr]\n    else {\n      component.info[componentAttr] = attrContent\n      for (const option in attrContent.style) {\n        if (!styleOptions.includes(option)) continue\n        componentStyles = Object.assign(componentStyles, {[componentAttr]: {[option]: attrContent.style[option]}})\n      }\n    }\n    console.log(componentStyles)\n    component.style = componentStyles\n    this.setState({ userLayoutObj: layoutCopy })\n  };\n\n  /* Update style configuration and rerender with it */\n  saveUserComponentStyleInfoToContext = (componentCode, newStylePair) => {\n    const { userLayoutObj } = alias.copyObject(this.state)\n    const component = alias.findByCode(userLayoutObj, componentCode)\n    if (!component.componentUserOverrideStyle) component.componentUserOverrideStyle = newStylePair\n    else Object.assign(component.componentUserOverrideStyle, newStylePair)\n    this.setState({\n      userLayoutObj: userLayoutObj\n    })\n  }\n\n  /* Get project info to BBDD based on the project ID */\n  getProjectInfo = async (projectId) => {\n    try {\n      const { data: { componentsConfiguration, style, _id } } = await api.get(`/projects/${projectId}`)\n      let firstStyle = {}\n      for (const key in componentsConfiguration) {\n        const component = componentsConfiguration[key]\n        const componentInfo = component.info\n        for (const attr in componentInfo) {\n          firstStyle = Object.assign(firstStyle, {[attr]: componentInfo[attr].style})\n        }\n        component.style = firstStyle\n      }\n      this.setState({\n        projectId: _id,\n        userLayoutObj: componentsConfiguration,\n        projectStyle: style,\n      })\n    } catch (error) {\n      this.setState({ dataError: \"Unable to get your project data\" })\n    }\n  }\n\n  render () {\n    const { children } = this.props\n    return (\n      <DataContext.Provider value={{\n        saveUserComponentStyleInfoToContext: this.saveUserComponentStyleInfoToContext,\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        deleteComponent: this.deleteComponent,\n        getProjectInfo: this.getProjectInfo,\n        moveComponent: this.moveComponent,\n        addComponent: this.addComponent,\n        switchMode: this.switchMode,\n        save: this.save,\n        ...this.state\n      }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}