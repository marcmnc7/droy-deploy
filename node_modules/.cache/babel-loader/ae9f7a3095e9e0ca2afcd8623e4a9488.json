{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/deploy/src/pages/Builder.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../contexts/dataContext';\nimport PropTypes from 'prop-types';\nimport UserComponentBase from '../components/droy/UserComponentBase';\nimport Loading from '../components/droy/Loading';\nimport '../styles/builder.css';\nimport api from '../services/apiClient';\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const {\n        data: {\n          componentsConfiguration,\n          style,\n          _id\n        }\n      } = await api.get(`/projects/${window.location.hostname.split('.')[0]}`);\n      this.setState({\n        projectId: _id,\n        userLayoutObj: componentsConfiguration,\n        projectStyle: style,\n        isLoading: false\n      });\n    };\n\n    this.showUserComponents = () => {\n      const {\n        userLayoutObj\n      } = this.state;\n      return userLayoutObj.map(c => {\n        const {\n          code,\n          userLayoutObj\n        } = this.props;\n        const UserComp = MATCH_COMPONENTS[code];\n        const {\n          info: componentInfo,\n          componentUserOverrideStyle: userStyle\n        } = alias.findByCode(userLayoutObj, code);\n        const componentProps = {};\n        componentProps.info = componentInfo;\n        componentProps.userStyle = userStyle;\n        return /*#__PURE__*/React.createElement(UserComp, Object.assign({}, componentProps, {\n          mode: \"view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }\n        }));\n        return /*#__PURE__*/React.createElement(UserComp, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      userLayoutObj: [],\n      projectStyle: \"\",\n      projectId: \"\",\n      dataError: \"\"\n    };\n  }\n  /* Updates data context with the actual project information */\n\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 60\n      }\n    })), !isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }\n    }, this.showUserComponents())));\n  }\n\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n};\nexport default withData(Builder);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/deploy/src/pages/Builder.js"],"names":["React","Component","withData","PropTypes","UserComponentBase","Loading","api","Builder","constructor","props","componentDidMount","data","componentsConfiguration","style","_id","get","window","location","hostname","split","setState","projectId","userLayoutObj","projectStyle","isLoading","showUserComponents","state","map","c","code","UserComp","MATCH_COMPONENTS","info","componentInfo","componentUserOverrideStyle","userStyle","alias","findByCode","componentProps","dataError","render","propTypes","array","saveInfoToContext","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../contexts/dataContext'\nimport PropTypes from 'prop-types'\nimport UserComponentBase from '../components/droy/UserComponentBase'\nimport Loading from '../components/droy/Loading'\nimport '../styles/builder.css'\nimport api from '../services/apiClient'\n\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      userLayoutObj: [],\n      projectStyle: \"\",\n      projectId: \"\",\n      dataError: \"\"\n    }\n  }\n\n  /* Updates data context with the actual project information */\n  componentDidMount = async () => {\n    const { data: { componentsConfiguration, style, _id } } = await api.get(`/projects/${window.location.hostname.split('.')[0]}`)\n    this.setState({\n      projectId: _id,\n      userLayoutObj: componentsConfiguration,\n      projectStyle: style,\n      isLoading: false\n    })\n  }\n\n  /* Loops over project info in data context to print user components */\n  /* If not components found, prints a pretty message */\n  showUserComponents = () => {\n    const { userLayoutObj } = this.state\n    \n    return userLayoutObj.map(c => {\n      const { code, userLayoutObj } = this.props\n      const UserComp = MATCH_COMPONENTS[code]\n      const { info: componentInfo, componentUserOverrideStyle: userStyle } = alias.findByCode(userLayoutObj, code)\n      const componentProps = {}\n      componentProps.info = componentInfo\n      componentProps.userStyle = userStyle\n      return <UserComp {...componentProps} mode='view'/>\n      return <UserComp  />\n    })\n  }\n\n  render() {\n    const { isLoading } = this.state\n    return (\n      <div>\n        <div className=\"main-builder\">\n          {isLoading && <div className='loading-container'><Loading /></div>}\n          {!isLoading && <div className=\"components-builder\">{this.showUserComponents()}</div>}\n        </div>\n      </div>\n    )\n  }\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n}\n\nexport default withData(Builder)\n"]},"metadata":{},"sourceType":"module"}