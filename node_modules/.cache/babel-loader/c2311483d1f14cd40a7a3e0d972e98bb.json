{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\nimport OptionsBar from '../droy/OptionsBar';\nimport ModalChangeInfo from '../droy/ModalChangeInfo';\nimport { uuid } from 'uuidv4';\nimport '../../styles/user-componentBase.css';\nimport firebase from '../../services/firebase';\n/* Provides all the funcions to manage all component content and style */\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenModal = e => {\n      const {\n        userLayoutObj,\n        code\n      } = this.props;\n      const attrCode = e.target.attributes['data-id'].value;\n      this.setState({\n        openChangeModal: true,\n        attributeSelected: attrCode,\n        attributeSelectedInfo: userLayoutObj.filter(c => c.code === code)[0].info[attrCode]\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        openChangeModal: false,\n        attributeSelected: '',\n        attributeSelectedInfo: ''\n      });\n    };\n\n    this.changeImage = async e => {\n      const {\n        projectId,\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const attr = e.target.attributes['data-id'].value;\n      const file = e.target.files[0];\n\n      if (file.size > 20000) {\n        alert('Imagen demasiado grande.');\n      } else {\n        const randomFileName = uuid();\n        const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`);\n        await storageRef.put(file);\n        const downloadUrl = await storageRef.getDownloadURL();\n        saveComponentInfoToContext(code, attr, {\n          src: downloadUrl\n        });\n      }\n    };\n\n    this.addLink = () => {\n      const {\n        code,\n        saveComponentInfoToContext,\n        userLayoutObj\n      } = this.props;\n      const newUserLayoutObj = [...userLayoutObj];\n      const targetComponentInfo = newUserLayoutObj.find(c => c.code === code).info;\n      const linksIds = [];\n\n      for (const key in targetComponentInfo) {\n        if (targetComponentInfo[key].type !== 'link') continue;\n        linksIds.push(parseInt(key.match(/\\d+$/)[0]));\n      }\n\n      if (linksIds.length >= 5) return;\n      let newAttr = '';\n      if (!linksIds.length) newAttr = 'link1';else newAttr = `link${Math.max(...linksIds) + 1}`; // Cambiar link por default a pagina de quienes somos de Droy\n\n      const newInfo = {\n        type: 'link',\n        text: \"New link\",\n        href: 'http://www.google.es',\n        toNewPage: true\n      };\n      saveComponentInfoToContext(code, newAttr, newInfo);\n    };\n\n    this.deleteLink = e => {\n      const {\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const {\n        attributeSelected\n      } = this.state;\n      saveComponentInfoToContext(code, attributeSelected, undefined);\n      this.handleCloseModal();\n    };\n\n    this.changeInfo = info => {\n      const {\n        attributeSelected\n      } = this.state;\n      const {\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      saveComponentInfoToContext(code, attributeSelected, info);\n      this.handleCloseModal();\n    };\n\n    this.changeColor = color => {\n      const {\n        code,\n        saveUserComponentStyleInfoToContext\n      } = this.props;\n      saveUserComponentStyleInfoToContext(code, {\n        backgroundColor: color\n      });\n    };\n\n    this.state = {\n      optionsModal: false,\n      attributeSelected: '',\n      attributeSelectedInfo: ''\n    };\n  }\n  /* Opens the editor modal setting the target to the state */\n\n\n  render() {\n    const {\n      mode,\n      moveComponent,\n      componentType,\n      code,\n      deleteComponent,\n      userLayoutObj\n    } = this.props;\n    const {\n      attributeSelected,\n      openChangeModal,\n      attributeSelectedInfo\n    } = this.state;\n    const UserComp = MATCH_COMPONENTS[code];\n    const componentInfo = userLayoutObj.filter(c => c.code === code)[0].info;\n    const userStyle = userLayoutObj.filter(c => c.code === code)[0].componentUserOverrideStyle;\n    console.log(3333, userLayoutObj);\n    const componentProps = {};\n\n    if (mode === 'edit') {\n      componentProps['openChangeModal'] = this.handleOpenModal;\n      componentProps['changeImage'] = this.changeImage;\n\n      if (componentType === \"nav\") {\n        componentProps['addLink'] = this.addLink;\n      }\n    }\n\n    componentProps['info'] = componentInfo;\n    componentProps['userStyle'] = userStyle;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UserComp, Object.assign({}, componentProps, {\n      mode: mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), mode === \"edit\" && /*#__PURE__*/React.createElement(OptionsBar, {\n      changeColor: this.changeColor,\n      addLink: this.addLink,\n      componentType: componentType,\n      code: code,\n      deleteComponent: deleteComponent,\n      moveComponent: moveComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }\n    }), mode === \"edit\" && openChangeModal && /*#__PURE__*/React.createElement(ModalChangeInfo, {\n      deleteLink: this.deleteLink,\n      info: attributeSelectedInfo,\n      code: code,\n      attributeSelected: attributeSelected,\n      changeInfo: this.changeInfo,\n      onClose: this.handleCloseModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 50\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","OptionsBar","ModalChangeInfo","uuid","firebase","UserComponentBase","constructor","props","handleOpenModal","e","userLayoutObj","code","attrCode","target","attributes","value","setState","openChangeModal","attributeSelected","attributeSelectedInfo","filter","c","info","handleCloseModal","changeImage","projectId","saveComponentInfoToContext","attr","file","files","size","alert","randomFileName","storageRef","storage","ref","auth","currentUser","uid","put","downloadUrl","getDownloadURL","src","addLink","newUserLayoutObj","targetComponentInfo","find","linksIds","key","type","push","parseInt","match","length","newAttr","Math","max","newInfo","text","href","toNewPage","deleteLink","state","undefined","changeInfo","changeColor","color","saveUserComponentStyleInfoToContext","backgroundColor","optionsModal","render","mode","moveComponent","componentType","deleteComponent","UserComp","componentInfo","userStyle","componentUserOverrideStyle","console","log","componentProps","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,qCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA;;AACA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACxCS,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAUpBC,eAVoB,GAUDC,CAAD,IAAM;AACtB,YAAM;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAA2B,KAAKJ,KAAtC;AACA,YAAMK,QAAQ,GAAGH,CAAC,CAACI,MAAF,CAASC,UAAT,CAAoB,SAApB,EAA+BC,KAAhD;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE,IADL;AAEZC,QAAAA,iBAAiB,EAAEN,QAFP;AAGZO,QAAAA,qBAAqB,EAAET,aAAa,CAACU,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACV,IAAF,KAAWA,IAArC,EAA2C,CAA3C,EAA8CW,IAA9C,CAAmDV,QAAnD;AAHX,OAAd;AAKD,KAlBmB;;AAAA,SAqBpBW,gBArBoB,GAqBD,MAAK;AACtB,WAAKP,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE,KADL;AAEZC,QAAAA,iBAAiB,EAAE,EAFP;AAGZC,QAAAA,qBAAqB,EAAE;AAHX,OAAd;AAKD,KA3BmB;;AAAA,SA8BpBK,WA9BoB,GA8BN,MAAOf,CAAP,IAAa;AACzB,YAAM;AAAEgB,QAAAA,SAAF;AAAad,QAAAA,IAAb;AAAmBe,QAAAA;AAAnB,UAAkD,KAAKnB,KAA7D;AACA,YAAMoB,IAAI,GAAGlB,CAAC,CAACI,MAAF,CAASC,UAAT,CAAoB,SAApB,EAA+BC,KAA5C;AACA,YAAMa,IAAI,GAAGnB,CAAC,CAACI,MAAF,CAASgB,KAAT,CAAe,CAAf,CAAb;;AACA,UAAGD,IAAI,CAACE,IAAL,GAAY,KAAf,EAAqB;AACnBC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OAFD,MAEO;AACL,cAAMC,cAAc,GAAG7B,IAAI,EAA3B;AACA,cAAM8B,UAAU,GAAG7B,QAAQ,CAAC8B,OAAT,GAAmBC,GAAnB,CAAwB,IAAG/B,QAAQ,CAACgC,IAAT,GAAgBC,WAAhB,CAA4BC,GAAI,IAAGb,SAAU,IAAGO,cAAe,EAA1F,CAAnB;AACA,cAAMC,UAAU,CAACM,GAAX,CAAeX,IAAf,CAAN;AACA,cAAMY,WAAW,GAAG,MAAMP,UAAU,CAACQ,cAAX,EAA1B;AACAf,QAAAA,0BAA0B,CAACf,IAAD,EAAOgB,IAAP,EAAa;AAAEe,UAAAA,GAAG,EAAEF;AAAP,SAAb,CAA1B;AACD;AACF,KA3CmB;;AAAA,SA6CpBG,OA7CoB,GA6CV,MAAM;AACd,YAAM;AAAEhC,QAAAA,IAAF;AAAQe,QAAAA,0BAAR;AAAoChB,QAAAA;AAApC,UAAsD,KAAKH,KAAjE;AACA,YAAMqC,gBAAgB,GAAG,CAAC,GAAGlC,aAAJ,CAAzB;AACA,YAAMmC,mBAAmB,GAAGD,gBAAgB,CAACE,IAAjB,CAAsBzB,CAAC,IAAIA,CAAC,CAACV,IAAF,KAAWA,IAAtC,EAA4CW,IAAxE;AACA,YAAMyB,QAAQ,GAAG,EAAjB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,mBAAlB,EAAuC;AACrC,YAAGA,mBAAmB,CAACG,GAAD,CAAnB,CAAyBC,IAAzB,KAAkC,MAArC,EAA6C;AAC7CF,QAAAA,QAAQ,CAACG,IAAT,CAAcC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,MAAV,EAAkB,CAAlB,CAAD,CAAtB;AACD;;AACD,UAAGL,QAAQ,CAACM,MAAT,IAAmB,CAAtB,EAAyB;AACzB,UAAIC,OAAO,GAAG,EAAd;AACA,UAAG,CAACP,QAAQ,CAACM,MAAb,EAAqBC,OAAO,GAAG,OAAV,CAArB,KACKA,OAAO,GAAI,OAAMC,IAAI,CAACC,GAAL,CAAS,GAAGT,QAAZ,IAAsB,CAAE,EAAzC,CAZS,CAad;;AACA,YAAMU,OAAO,GAAG;AAAER,QAAAA,IAAI,EAAE,MAAR;AAAgBS,QAAAA,IAAI,EAAE,UAAtB;AAAkCC,QAAAA,IAAI,EAAE,sBAAxC;AAAgEC,QAAAA,SAAS,EAAC;AAA1E,OAAhB;AACAlC,MAAAA,0BAA0B,CAACf,IAAD,EAAO2C,OAAP,EAAgBG,OAAhB,CAA1B;AACD,KA7DmB;;AAAA,SA+DpBI,UA/DoB,GA+DNpD,CAAD,IAAO;AAClB,YAAM;AAAEE,QAAAA,IAAF;AAAQe,QAAAA;AAAR,UAAuC,KAAKnB,KAAlD;AACA,YAAM;AAAEW,QAAAA;AAAF,UAAwB,KAAK4C,KAAnC;AACApC,MAAAA,0BAA0B,CAACf,IAAD,EAAOO,iBAAP,EAA0B6C,SAA1B,CAA1B;AACA,WAAKxC,gBAAL;AACD,KApEmB;;AAAA,SAsEpByC,UAtEoB,GAsEN1C,IAAD,IAAU;AACrB,YAAM;AAAEJ,QAAAA;AAAF,UAAwB,KAAK4C,KAAnC;AACA,YAAM;AAAEnD,QAAAA,IAAF;AAAQe,QAAAA;AAAR,UAAuC,KAAKnB,KAAlD;AACAmB,MAAAA,0BAA0B,CAACf,IAAD,EAAOO,iBAAP,EAA0BI,IAA1B,CAA1B;AACA,WAAKC,gBAAL;AACD,KA3EmB;;AAAA,SA6EpB0C,WA7EoB,GA6ELC,KAAD,IAAW;AACvB,YAAM;AAAEvD,QAAAA,IAAF;AAAQwD,QAAAA;AAAR,UAAgD,KAAK5D,KAA3D;AACA4D,MAAAA,mCAAmC,CAACxD,IAAD,EAAO;AAACyD,QAAAA,eAAe,EAAEF;AAAlB,OAAP,CAAnC;AACD,KAhFmB;;AAElB,SAAKJ,KAAL,GAAa;AACXO,MAAAA,YAAY,EAAE,KADH;AAEXnD,MAAAA,iBAAiB,EAAE,EAFR;AAGXC,MAAAA,qBAAqB,EAAE;AAHZ,KAAb;AAKD;AAED;;;AAyEAmD,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,aAAR;AAAuBC,MAAAA,aAAvB;AAAsC9D,MAAAA,IAAtC;AAA4C+D,MAAAA,eAA5C;AAA6DhE,MAAAA;AAA7D,QAAgF,KAAKH,KAA3F;AACA,UAAM;AAAEW,MAAAA,iBAAF;AAAqBD,MAAAA,eAArB;AAAsCE,MAAAA;AAAtC,QAAgE,KAAK2C,KAA3E;AACA,UAAMa,QAAQ,GAAG7E,gBAAgB,CAACa,IAAD,CAAjC;AACA,UAAMiE,aAAa,GAAGlE,aAAa,CAACU,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACV,IAAF,KAAWA,IAArC,EAA2C,CAA3C,EAA8CW,IAApE;AACA,UAAMuD,SAAS,GAAGnE,aAAa,CAACU,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACV,IAAF,KAAWA,IAArC,EAA2C,CAA3C,EAA8CmE,0BAAhE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBtE,aAAlB;AACA,UAAMuE,cAAc,GAAG,EAAvB;;AACA,QAAGV,IAAI,KAAK,MAAZ,EAAmB;AACjBU,MAAAA,cAAc,CAAC,iBAAD,CAAd,GAAoC,KAAKzE,eAAzC;AACAyE,MAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,KAAKzD,WAArC;;AACA,UAAGiD,aAAa,KAAK,KAArB,EAA4B;AAC1BQ,QAAAA,cAAc,CAAC,SAAD,CAAd,GAA4B,KAAKtC,OAAjC;AACD;AACF;;AACDsC,IAAAA,cAAc,CAAC,MAAD,CAAd,GAAyBL,aAAzB;AACAK,IAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BJ,SAA9B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,oBAAcI,cAAd;AAA8B,MAAA,IAAI,EAAEV,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGA,IAAI,KAAK,MAAT,iBAAmB,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKN,WAA9B;AAA2C,MAAA,OAAO,EAAE,KAAKtB,OAAzD;AAAkE,MAAA,aAAa,EAAE8B,aAAjF;AAAgG,MAAA,IAAI,EAAE9D,IAAtG;AAA4G,MAAA,eAAe,EAAE+D,eAA7H;AAA8I,MAAA,aAAa,EAAEF,aAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,EAEGD,IAAI,KAAK,MAAT,IAAmBtD,eAAnB,iBAAsC,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,KAAK4C,UAAlC;AAA8C,MAAA,IAAI,EAAE1C,qBAApD;AAA2E,MAAA,IAAI,EAAER,IAAjF;AAAuF,MAAA,iBAAiB,EAAEO,iBAA1G;AAA6H,MAAA,UAAU,EAAE,KAAK8C,UAA9I;AAA0J,MAAA,OAAO,EAAE,KAAKzC,gBAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFzC,CADF,CADF;AAQD;;AA5GuC;;AA+G1ClB,iBAAiB,CAAC6E,SAAlB,GAA8B;AAC5BvE,EAAAA,IAAI,EAAEZ,SAAS,CAACoF;AADY,CAA9B;AAIA,eAAenF,QAAQ,CAACK,iBAAD,CAAvB","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\nimport OptionsBar from '../droy/OptionsBar'\nimport ModalChangeInfo from '../droy/ModalChangeInfo'\nimport { uuid } from 'uuidv4'\nimport '../../styles/user-componentBase.css'\nimport firebase from '../../services/firebase'\n\n/* Provides all the funcions to manage all component content and style */\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      optionsModal: false,\n      attributeSelected: '',\n      attributeSelectedInfo: ''\n    }\n  }\n  \n  /* Opens the editor modal setting the target to the state */\n  handleOpenModal = (e) =>{\n    const { userLayoutObj, code  } = this.props\n    const attrCode = e.target.attributes['data-id'].value\n    this.setState({\n      openChangeModal: true,\n      attributeSelected: attrCode,\n      attributeSelectedInfo: userLayoutObj.filter(c => c.code === code)[0].info[attrCode]\n    })\n  }\n\n  /* Close the editor modal */\n  handleCloseModal = () =>{\n    this.setState({\n      openChangeModal: false,\n      attributeSelected: '',\n      attributeSelectedInfo: ''\n    })\n  }\n  \n  /* Uploads the recived image to Firebase Storage and update context */\n  changeImage = async (e) => {\n    const { projectId, code, saveComponentInfoToContext } = this.props\n    const attr = e.target.attributes['data-id'].value\n    const file = e.target.files[0]\n    if(file.size > 20000){\n      alert('Imagen demasiado grande.')\n    } else {\n      const randomFileName = uuid()\n      const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`)\n      await storageRef.put(file)\n      const downloadUrl = await storageRef.getDownloadURL()\n      saveComponentInfoToContext(code, attr, { src: downloadUrl })\n    }\n  }\n\n  addLink = () => {\n    const { code, saveComponentInfoToContext, userLayoutObj } = this.props\n    const newUserLayoutObj = [...userLayoutObj]\n    const targetComponentInfo = newUserLayoutObj.find(c => c.code === code).info\n    const linksIds = [] \n    for (const key in targetComponentInfo) {\n      if(targetComponentInfo[key].type !== 'link') continue\n      linksIds.push(parseInt(key.match(/\\d+$/)[0]))\n    }\n    if(linksIds.length >= 5) return\n    let newAttr = ''\n    if(!linksIds.length) newAttr = 'link1'\n    else newAttr = `link${Math.max(...linksIds)+1}`\n    // Cambiar link por default a pagina de quienes somos de Droy\n    const newInfo = { type: 'link', text: \"New link\", href: 'http://www.google.es', toNewPage:true}\n    saveComponentInfoToContext(code, newAttr, newInfo)\n  }\n\n  deleteLink = (e) => {\n    const { code, saveComponentInfoToContext } = this.props\n    const { attributeSelected } = this.state\n    saveComponentInfoToContext(code, attributeSelected, undefined)\n    this.handleCloseModal()\n  }\n\n  changeInfo = (info) => {\n    const { attributeSelected } = this.state\n    const { code, saveComponentInfoToContext } = this.props\n    saveComponentInfoToContext(code, attributeSelected, info)\n    this.handleCloseModal()\n  }\n\n  changeColor = (color) => {\n    const { code, saveUserComponentStyleInfoToContext } = this.props\n    saveUserComponentStyleInfoToContext(code, {backgroundColor: color})\n  }\n\n  render () {\n    const { mode, moveComponent, componentType, code, deleteComponent, userLayoutObj  } = this.props\n    const { attributeSelected, openChangeModal, attributeSelectedInfo } = this.state\n    const UserComp = MATCH_COMPONENTS[code]\n    const componentInfo = userLayoutObj.filter(c => c.code === code)[0].info\n    const userStyle = userLayoutObj.filter(c => c.code === code)[0].componentUserOverrideStyle\n    console.log(3333, userLayoutObj)\n    const componentProps = {}\n    if(mode === 'edit'){\n      componentProps['openChangeModal'] = this.handleOpenModal\n      componentProps['changeImage'] = this.changeImage\n      if(componentType === \"nav\") {\n        componentProps['addLink'] = this.addLink\n      }\n    }\n    componentProps['info'] = componentInfo\n    componentProps['userStyle'] = userStyle\n    return (\n      <div>\n        <UserComp {...componentProps} mode={mode}>\n          {mode === \"edit\" && <OptionsBar changeColor={this.changeColor} addLink={this.addLink} componentType={componentType} code={code} deleteComponent={deleteComponent} moveComponent={moveComponent}/>}\n          {mode === \"edit\" && openChangeModal && <ModalChangeInfo deleteLink={this.deleteLink} info={attributeSelectedInfo} code={code} attributeSelected={attributeSelected} changeInfo={this.changeInfo} onClose={this.handleCloseModal}/>}\n        </UserComp>\n      </div>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)\n"]},"metadata":{},"sourceType":"module"}