{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/ComponentsSelectorBar.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../../contexts/dataContext';\nimport '../../styles/components-selectorBar.css';\nimport api from '../../services/apiClient';\nimport alias from '../../utils/alias';\nimport Loading from '../droy/Loading';\nconst STATUS = {\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  ERROR: 'ERROR'\n};\n\nclass ComponentsSelectorBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        const {\n          projectStyle\n        } = this.props;\n        const {\n          data: styleComponents\n        } = await api.get(`/components?style=${projectStyle}`);\n        console.log(styleComponents);\n        this.setState({\n          styleComponents,\n          status: STATUS.LOADED\n        });\n      } catch (error) {\n        this.setState({\n          status: STATUS.ERROR\n        });\n      }\n    };\n\n    this.showComponents = () => {\n      const usedCompIds = this.props.userLayoutObj.map(c => c.code);\n      const {\n        styleComponents\n      } = this.state;\n      return styleComponents.map(c => {\n        const thumbnail = c.thumbnail;\n\n        if (!usedCompIds.includes(c.code)) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: c.code,\n            style: {\n              margin: '20px',\n              backgroundImage: `url(\"${thumbnail.name}\")`,\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: '100%',\n              height: thumbnail.height\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: \"buttons-selectorBar\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            \"data-code\": c.code,\n            \"data-style\": c.componentStyle,\n            \"data-options\": c.componentOptions,\n            onClick: this.handleAddComponent,\n            className: \"image-selectorBar\",\n            src: \"/img/sum-icon.png\",\n            alt: \"down\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }\n          })));\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: c.code,\n          style: {\n            margin: '20px',\n            opacity: '0.3',\n            backgroundImage: `url(\"${thumbnail.name}\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: '100%',\n            height: thumbnail.height\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        });\n      });\n    };\n\n    this.handleAddComponent = e => {\n      const {\n        addComponent\n      } = this.props;\n      const {\n        styleComponents\n      } = this.state;\n      const code = e.target.attributes['data-code'].value;\n      const componentOptions = e.target.attributes['data-options'].value.split(',');\n      let componentStyle = e.target.attributes['data-style'].value;\n      const {\n        defaultConfig\n      } = alias.findByCode(styleComponents, code);\n      addComponent(code, defaultConfig, componentOptions, componentStyle);\n    };\n\n    this.showContent = () => {\n      const {\n        status\n      } = this.state;\n\n      switch (status) {\n        case STATUS.LOADING:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"loading-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 16\n            }\n          }, /*#__PURE__*/React.createElement(Loading, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 51\n            }\n          }));\n\n        case STATUS.LOADED:\n          return this.showComponents();\n\n        case STATUS.ERROR:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"error-text padding-error\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 16\n            }\n          }, \"Error\");\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      styleComponents: [],\n      status: STATUS.LOADING\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title-component-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Components:\"), this.showContent());\n  }\n\n}\n\nexport default withData(ComponentsSelectorBar);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/ComponentsSelectorBar.js"],"names":["React","Component","withData","api","alias","Loading","STATUS","LOADING","LOADED","ERROR","ComponentsSelectorBar","constructor","props","componentDidMount","projectStyle","data","styleComponents","get","console","log","setState","status","error","showComponents","usedCompIds","userLayoutObj","map","c","code","state","thumbnail","includes","margin","backgroundImage","name","backgroundRepeat","backgroundSize","height","componentStyle","componentOptions","handleAddComponent","opacity","e","addComponent","target","attributes","value","split","defaultConfig","findByCode","showContent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../../contexts/dataContext'\nimport '../../styles/components-selectorBar.css'\nimport api from '../../services/apiClient'\nimport alias from '../../utils/alias'\nimport Loading from '../droy/Loading'\n\nconst STATUS = {\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  ERROR: 'ERROR',\n}\n\nclass ComponentsSelectorBar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      styleComponents: [],\n      status: STATUS.LOADING\n    }\n  }\n\n  componentDidMount = async () => {\n    try {\n      const { projectStyle } = this.props\n      const { data: styleComponents } = await api.get(`/components?style=${projectStyle}`)\n      console.log(styleComponents)\n      this.setState({ styleComponents, status: STATUS.LOADED })\n    } catch (error) {\n      this.setState({ status: STATUS.ERROR })\n    }\n  }\n\n  showComponents = () => {\n    const usedCompIds = this.props.userLayoutObj.map(c => c.code)\n    const { styleComponents } = this.state\n    return styleComponents.map(c => {\n      const thumbnail = c.thumbnail\n      if (!usedCompIds.includes(c.code)) {\n        return (\n          <div key={c.code} style={{ margin: '20px', backgroundImage: `url(\"${thumbnail.name}\")`, backgroundRepeat: 'no-repeat', backgroundSize: '100%', height: thumbnail.height }}>\n            <button className='buttons-selectorBar'>\n              <img data-code={c.code} data-style={c.componentStyle} data-options={c.componentOptions} onClick={this.handleAddComponent} className='image-selectorBar' src=\"/img/sum-icon.png\" alt='down'/>\n            </button>\n          </div>)\n      }\n      return (<div key={c.code} style={{ margin: '20px', opacity: '0.3', backgroundImage: `url(\"${thumbnail.name}\")`, backgroundRepeat: 'no-repeat', backgroundSize: '100%', height: thumbnail.height }}>\n      </div>)\n    })\n  }\n\n  handleAddComponent = (e) => {\n    const { addComponent } = this.props\n    const { styleComponents } = this.state\n    const code = e.target.attributes['data-code'].value\n    const componentOptions = e.target.attributes['data-options'].value.split(',')\n    let componentStyle = e.target.attributes['data-style'].value\n    const { defaultConfig } = alias.findByCode(styleComponents, code)\n    addComponent(code, defaultConfig, componentOptions, componentStyle)\n  }\n\n  showContent = () => {\n    const { status } = this.state\n    switch (status) {\n      case STATUS.LOADING:\n        return <div className='loading-container'><Loading /></div>\n      case STATUS.LOADED:\n        return this.showComponents()\n      case STATUS.ERROR:\n        return <div className='error-text padding-error'>Error</div>\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className='components-bar'>\n        <h2 className='title-component-bar'>Components:</h2>\n        {this.showContent()}\n      </div>\n    )\n  }\n}\n\nexport default withData(ComponentsSelectorBar)"]},"metadata":{},"sourceType":"module"}