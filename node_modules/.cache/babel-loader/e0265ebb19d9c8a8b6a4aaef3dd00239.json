{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport NavBar from '../components/droy/NavBar';\nimport Loading from '../components/droy/Loading';\nimport ModalResetPassword from '../components/droy/ModalResetPassword';\nimport { Link } from 'react-router-dom';\nimport firebase from '../services/firebase';\nimport '../styles/login-signup.css';\nimport { ToastContainer } from 'react-toastify';\nimport { notifyError } from '../services/notifications';\nconst STATUS = {\n  LOADING: 'LOADING',\n  ERROR: 'ERROR',\n  LOADED: 'LOADED'\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      try {\n        e.preventDefault();\n        const {\n          history\n        } = this.props;\n        const {\n          email,\n          hashedPassword\n        } = this.state;\n        this.setState({\n          status: STATUS.LOADING\n        });\n        await firebase.auth().signInWithEmailAndPassword(email, hashedPassword);\n        history.push(\"/\");\n      } catch (error) {\n        this.setState({\n          status: STATUS.LOADED,\n          errorMessage: 'Error on login'\n        });\n      }\n    };\n\n    this.showModalReset = () => {\n      this.setState({\n        resetPasswordModal: true\n      });\n    };\n\n    this.closeModalReset = () => {\n      this.setState({\n        resetPasswordModal: false\n      });\n    };\n\n    this.handleSubmitGoogle = async e => {\n      try {\n        const {\n          history\n        } = this.props;\n        const provider = new firebase.auth.GoogleAuthProvider();\n        await firebase.auth().signInWithPopup(provider);\n        history.push(\"/\");\n      } catch (error) {\n        console.log(2);\n        notifyError('Cannot login');\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.showContent = () => {\n      const {\n        status,\n        errorMessage,\n        email,\n        hashedPassword,\n        resetPasswordModal\n      } = this.state;\n\n      switch (status) {\n        case STATUS.LOADING:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"loading-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 16\n            }\n          }, /*#__PURE__*/React.createElement(Loading, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 51\n            }\n          }));\n\n        case STATUS.LOADED:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"login-signup-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"logo-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-title-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            className: \"title-login-signup\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }\n          }, \"Login:\"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"error-text padding-error\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }\n          }, errorMessage), resetPasswordModal && /*#__PURE__*/React.createElement(ModalResetPassword, {\n            onClose: this.closeModalReset,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 38\n            }\n          }), /*#__PURE__*/React.createElement(\"form\", {\n            className: \"login-form\",\n            onSubmit: this.handleSubmit,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            className: \"input-form\",\n            placeholder: \"email\",\n            type: \"text\",\n            required: \"required\",\n            name: \"email\",\n            value: email,\n            id: \"email\",\n            onChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"input\", {\n            className: \"input-form\",\n            type: \"password\",\n            required: \"required\",\n            placeholder: \"\\xB7\\xB7\\xB7\\xB7\\xB7\\xB7\",\n            name: \"hashedPassword\",\n            id: \"hashedPassword\",\n            value: hashedPassword,\n            onChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"button-link-login-signup\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"link-login-container\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            className: \"text-form\",\n            to: \"/signup\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }\n          }, \"You don't have an account? Register here!\"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"text-form\",\n            onClick: this.showModalReset,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }\n          }, \"Reset password\")), /*#__PURE__*/React.createElement(\"input\", {\n            className: \"button-form\",\n            type: \"submit\",\n            value: \"Log in\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"google-container\",\n            onClick: this.handleSubmitGoogle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"google-image\",\n            src: \"/img/google.png\",\n            alt: \"google\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }\n          })), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"google-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }\n          }, \"Login with google\"))));\n\n        default:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 16\n            }\n          }, \"Strange error...\");\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      hashedPassword: \"\",\n      status: STATUS.LOADED,\n      errorMessage: \"\",\n      resetPasswordModal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 4000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), this.showContent());\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/pages/Login.js"],"names":["React","Component","NavBar","Loading","ModalResetPassword","Link","firebase","ToastContainer","notifyError","STATUS","LOADING","ERROR","LOADED","Login","constructor","props","handleSubmit","e","preventDefault","history","email","hashedPassword","state","setState","status","auth","signInWithEmailAndPassword","push","error","errorMessage","showModalReset","resetPasswordModal","closeModalReset","handleSubmitGoogle","provider","GoogleAuthProvider","signInWithPopup","console","log","handleChange","target","name","value","showContent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NavBar from '../components/droy/NavBar'\nimport Loading from '../components/droy/Loading'\nimport ModalResetPassword from '../components/droy/ModalResetPassword'\nimport { Link } from 'react-router-dom'\nimport firebase from '../services/firebase'\nimport '../styles/login-signup.css'\nimport { ToastContainer } from 'react-toastify';\nimport { notifyError } from '../services/notifications'\n\nconst STATUS = {\n  LOADING: 'LOADING',\n  ERROR: 'ERROR',\n  LOADED: 'LOADED',\n}\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      hashedPassword: \"\",\n      status: STATUS.LOADED,\n      errorMessage: \"\",\n      resetPasswordModal: false\n    }\n  }\n\n\n\n  handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const { history } = this.props\n      const { email, hashedPassword } = this.state;\n      this.setState({ status: STATUS.LOADING })\n      await firebase.auth().signInWithEmailAndPassword(email, hashedPassword)\n      history.push(\"/\")\n    } catch (error) {\n      this.setState({\n        status: STATUS.LOADED,\n        errorMessage: 'Error on login'\n      })\n    }\n  };\n\n  showModalReset = () => {\n    this.setState({\n      resetPasswordModal: true\n    })\n  }\n\n  closeModalReset = () => {\n    this.setState({\n      resetPasswordModal: false\n    })\n  }\n\n  handleSubmitGoogle = async (e) => {\n    try {\n      const { history } = this.props\n      const provider = new firebase.auth.GoogleAuthProvider()\n      await firebase.auth().signInWithPopup(provider)\n      history.push(\"/\")\n    } catch (error) {\n      console.log(2)\n      notifyError('Cannot login')\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  showContent = () => {\n    const { status, errorMessage, email, hashedPassword, resetPasswordModal } = this.state\n    switch (status) {\n      case STATUS.LOADING:\n        return <div className='loading-container'><Loading /></div>\n      case STATUS.LOADED:\n        return (\n          <div className='login-signup-container'>\n            <div className='logo-container'>\n            </div>\n            <div className='form-title-container'>\n              <h1 className='title-login-signup'>Login:</h1>\n              <p className='error-text padding-error'>{errorMessage}</p>\n              {resetPasswordModal && <ModalResetPassword onClose={this.closeModalReset} />}\n              <form className='login-form' onSubmit={this.handleSubmit}>\n                <input className='input-form'\n                  placeholder=\"email\"\n                  type=\"text\"\n                  required=\"required\"\n                  name=\"email\"\n                  value={email}\n                  id=\"email\"\n                  onChange={this.handleChange}\n                />\n                <input className='input-form'\n                  type=\"password\"\n                  required=\"required\"\n                  placeholder=\"······\"\n                  name=\"hashedPassword\"\n                  id=\"hashedPassword\"\n                  value={hashedPassword}\n                  onChange={this.handleChange}\n                />\n                <div className='button-link-login-signup'>\n                  <div className='link-login-container'>\n                    <Link className='text-form' to=\"/signup\">You don't have an account? Register here!</Link>\n                    <p className='text-form'  onClick={this.showModalReset}>Reset password</p>\n                  </div>\n                  <input className='button-form' type=\"submit\" value=\"Log in\" />\n                </div>\n              </form>\n              <div className='google-container' onClick={this.handleSubmitGoogle} >\n                <div>\n                  <img className='google-image' src=\"/img/google.png\" alt=\"google\" />\n                </div>\n                <p className='google-text'>Login with google</p>\n              </div>\n            </div>\n          </div>)\n      default:\n        return <div>Strange error...</div>\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <ToastContainer\n        position=\"top-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        />\n        {this.showContent()}\n      </div>\n    );\n  }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}