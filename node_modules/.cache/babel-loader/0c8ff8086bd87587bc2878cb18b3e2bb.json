{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js\";\nimport React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nexport const AuthContext = React.createContext();\nexport const withAuth = Comp => {\n  return class WithAuth extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, props => {\n        return /*#__PURE__*/React.createElement(Comp, Object.assign({\n          handleLogin: props.handleLogin,\n          user: props.user,\n          loginError: props.loginError,\n          isLoggedIn: props.isLoggedIn,\n          handleLogout: props.handleLogout\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        const user = await api.get('/auth/whoami');\n        this.setState({\n          isLoading: false,\n          isLoggedIn: true,\n          user\n        });\n      } catch (error) {\n        this.setState({\n          isLoading: false,\n          isLoggedIn: false,\n          user: null\n        });\n      }\n    };\n\n    this.handleLogin = async ({\n      username,\n      hashedPassword\n    }) => {\n      try {\n        const {\n          data: user\n        } = await api.post('/auth/login', {\n          username,\n          hashedPassword\n        });\n        this.setState({\n          isLoggedIn: true,\n          user\n        });\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: error.response.data.errors[0]\n        });\n      }\n    };\n\n    this.handleLogout = async () => {\n      try {\n        await api.get('/auth/logout');\n        this.setState({\n          isLoggedIn: false,\n          user: null\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      isLoading: true,\n      loginError: \"\"\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      isLoggedIn,\n      user,\n      loginError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        user,\n        loginError,\n        handleLogin: this.handleLogin,\n        handleLogout: this.handleLogout\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js"],"names":["React","Component","api","AuthContext","createContext","withAuth","Comp","WithAuth","render","props","handleLogin","user","loginError","isLoggedIn","handleLogout","AuthProvider","constructor","componentDidMount","get","setState","isLoading","error","username","hashedPassword","data","post","response","errors","console","log","state","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\n\nexport const AuthContext = React.createContext();\n\nexport const withAuth = (Comp) => {\n  return class WithAuth extends Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {(props) => {\n            return (\n              <Comp\n                handleLogin={props.handleLogin}\n                user={props.user}\n                loginError={props.loginError}\n                isLoggedIn={props.isLoggedIn}\n                handleLogout={props.handleLogout}\n                {...this.props}\n              />\n            );\n          }}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      isLoading: true,\n      loginError: \"\"\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      const user = await api.get('/auth/whoami')\n      this.setState({\n        isLoading: false,\n        isLoggedIn: true,\n        user,\n      })\n      \n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        isLoggedIn: false,\n        user: null,\n      })      \n    }\n  }\n\n  handleLogin = async ({ username, hashedPassword }) => {\n    try {\n      const { data: user } = await api.post('/auth/login', { username, hashedPassword })\n      this.setState({\n        isLoggedIn: true,\n        user,\n      });\n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: error.response.data.errors[0]\n      })      \n    }\n  };\n\n  handleLogout = async () => {\n    try {\n      await api.get('/auth/logout')\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n      });\n      \n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggedIn, user, loginError } = this.state;\n    return (\n      <AuthContext.Provider\n        value={{\n          isLoggedIn,\n          user,\n          loginError,\n          handleLogin: this.handleLogin,\n          handleLogout: this.handleLogout,\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}