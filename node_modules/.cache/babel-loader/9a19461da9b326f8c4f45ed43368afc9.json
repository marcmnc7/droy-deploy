{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeInfo = e => {\n      const newText = prompt('Inserta el nuevo texto');\n      const newInfo = { ...this.state.info\n      };\n      newInfo[e.target.id] = newText;\n      this.setState({\n        info: newInfo\n      });\n    };\n\n    this.componentDidUpdate = () => {\n      console.log('User component base -> component did update');\n      /* const { saveInfoToContext } = this.props\n      const { info } = this.state\n      saveInfoToContext(info) */\n    };\n\n    this.state = {\n      info: this.props.info\n    };\n  }\n\n  render() {\n    const {\n      code\n    } = this.props;\n    const UserComp = MATCH_COMPONENTS[code];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UserComp, Object.assign({\n      changeInfo: this.changeInfo,\n      updateInfo: this.updateInfo\n    }, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","UserComponentBase","constructor","props","changeInfo","e","newText","prompt","newInfo","state","info","target","id","setState","componentDidUpdate","console","log","render","code","UserComp","updateInfo","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACxCK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAOpBC,UAPoB,GAONC,CAAD,IAAO;AAClB,YAAMC,OAAO,GAAGC,MAAM,CAAC,wBAAD,CAAtB;AACA,YAAMC,OAAO,GAAG,EAAC,GAAG,KAAKC,KAAL,CAAWC;AAAf,OAAhB;AACAF,MAAAA,OAAO,CAACH,CAAC,CAACM,MAAF,CAASC,EAAV,CAAP,GAAuBN,OAAvB;AACA,WAAKO,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAEF;AADM,OAAd;AAGD,KAdmB;;AAAA,SAgBpBM,kBAhBoB,GAgBC,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACA;;;AAGD,KArBmB;;AAElB,SAAKP,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO;AADN,KAAb;AAGD;;AAkBDO,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKf,KAAtB;AACA,UAAMgB,QAAQ,GAAGrB,gBAAgB,CAACoB,IAAD,CAAjC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKd,UAA3B;AAAuC,MAAA,UAAU,EAAE,KAAKgB;AAAxD,OAAwE,KAAKX,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADF;AAKD;;AAhCuC;;AAmC1CR,iBAAiB,CAACoB,SAAlB,GAA8B;AAC5BH,EAAAA,IAAI,EAAEnB,SAAS,CAACuB;AADY,CAA9B;AAIA,eAAetB,QAAQ,CAACC,iBAAD,CAAvB","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\n\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      info: this.props.info\n    }\n  }\n\n  changeInfo = (e) => {\n    const newText = prompt('Inserta el nuevo texto')\n    const newInfo = {...this.state.info}\n    newInfo[e.target.id] = newText\n    this.setState({\n      info: newInfo\n    })\n  }\n\n  componentDidUpdate = () => {\n    console.log('User component base -> component did update')\n    /* const { saveInfoToContext } = this.props\n    const { info } = this.state\n    saveInfoToContext(info) */\n  }\n\n  render () {\n    const { code } = this.props\n    const UserComp = MATCH_COMPONENTS[code]\n    return (\n      <div>\n        { <UserComp changeInfo={this.changeInfo} updateInfo={this.updateInfo} {...this.state }/> }\n      </div>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)"]},"metadata":{},"sourceType":"module"}