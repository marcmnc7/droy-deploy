{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst DataContext = React.createContext(); // Consumer Wrapper\n\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, props => /*#__PURE__*/React.createElement(Comp, Object.assign({}, this.props, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }\n      })));\n    }\n\n  };\n}; // Provider def\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveComponentInfoToContext = (componentInfo, componentCode) => {\n      const {\n        userLayoutObj\n      } = this.state;\n      let newUserLayoutObj = [...userLayoutObj];\n      const existingComponent = newUserLayoutObj.filter(c => c.code === componentCode);\n\n      if (existingComponent.length) {\n        console.log(3);\n        newUserLayoutObj = newUserLayoutObj.map(c => {\n          if (c => c.code === componentCode) Object.assign(c.info, componentInfo);\n        });\n      } else {\n        newUserLayoutObj.push({\n          info: componentInfo,\n          code: componentCode\n        });\n      }\n\n      console.log(8, newUserLayoutObj);\n      this.setState({\n        userLayoutObj: newUserLayoutObj\n      });\n    };\n\n    this.state = {\n      userLayoutObj: []\n    };\n  }\n\n  render() {\n    const {\n      children,\n      code\n    } = this.props;\n    const {\n      userLayoutObj\n    } = this.state;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        userLayoutObj: userLayoutObj\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js"],"names":["React","Component","PropTypes","DataContext","createContext","withData","Comp","WithData","render","props","DataProvider","constructor","saveComponentInfoToContext","componentInfo","componentCode","userLayoutObj","state","newUserLayoutObj","existingComponent","filter","c","code","length","console","log","map","Object","assign","info","push","setState","children","propTypes","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AACtCO,IAAAA,MAAM,GAAI;AACR,0BACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KAAD,iBAAW,oBAAC,IAAD,oBAAU,KAAKA,KAAf,EAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADf,CADF;AAKD;;AAPqC,GAAxC;AASD,CAVM,C,CAYP;;AACA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACnCU,EAAAA,WAAW,CAAEF,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAOpBG,0BAPoB,GAOS,CAACC,aAAD,EAAgBC,aAAhB,KAAkC;AAC7D,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AACA,UAAIC,gBAAgB,GAAG,CAAE,GAAGF,aAAL,CAAvB;AACA,YAAMG,iBAAiB,GAAGD,gBAAgB,CAACE,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWP,aAAxC,CAA1B;;AACA,UAAGI,iBAAiB,CAACI,MAArB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAP,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACQ,GAAjB,CAAqBL,CAAC,IAAI;AAC3C,cAAGA,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWP,aAAnB,EAAkCY,MAAM,CAACC,MAAP,CAAcP,CAAC,CAACQ,IAAhB,EAAsBf,aAAtB;AACnC,SAFkB,CAAnB;AAGD,OALD,MAKO;AACLI,QAAAA,gBAAgB,CAACY,IAAjB,CAAsB;AAAED,UAAAA,IAAI,EAAEf,aAAR;AAAuBQ,UAAAA,IAAI,EAAEP;AAA7B,SAAtB;AACD;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeP,gBAAf;AACA,WAAKa,QAAL,CAAc;AACZf,QAAAA,aAAa,EAAEE;AADH,OAAd;AAGD,KAvBmB;;AAElB,SAAKD,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAoBDP,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEuB,MAAAA,QAAF;AAAYV,MAAAA;AAAZ,QAAqB,KAAKZ,KAAhC;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAoB,KAAKC,KAA/B;AACA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAC3BJ,QAAAA,0BAA0B,EAAE,KAAKA,0BADN;AAE3BG,QAAAA,aAAa,EAAEA;AAFY,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGgB,QAJH,CADF;AAQD;;AArCkC;;AAwCrCrB,YAAY,CAACsB,SAAb,GAAyB;AACvBD,EAAAA,QAAQ,EAAE7B,SAAS,CAAC+B;AADG,CAAzB;AAIA,eAAevB,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DataContext = React.createContext()\n\n// Consumer Wrapper\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render () {\n      return (\n        <DataContext.Consumer>\n          { (props) => <Comp {...this.props} {...props} /> }\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\n// Provider def\nclass DataProvider extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userLayoutObj: []\n    }\n  }\n\n  saveComponentInfoToContext = (componentInfo, componentCode) => {\n    const { userLayoutObj } = this.state\n    let newUserLayoutObj = [ ...userLayoutObj ]\n    const existingComponent = newUserLayoutObj.filter(c => c.code === componentCode)\n    if(existingComponent.length) {\n      console.log(3)\n      newUserLayoutObj = newUserLayoutObj.map(c => {\n        if(c => c.code === componentCode) Object.assign(c.info, componentInfo)\n      })\n    } else {\n      newUserLayoutObj.push({ info: componentInfo, code: componentCode })\n    }\n    console.log(8, newUserLayoutObj)\n    this.setState({\n      userLayoutObj: newUserLayoutObj\n    })\n  };\n\n  render () {\n    const { children, code } = this.props\n    const { userLayoutObj } = this.state\n    return (\n      <DataContext.Provider value={{\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        userLayoutObj: userLayoutObj,\n      }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}