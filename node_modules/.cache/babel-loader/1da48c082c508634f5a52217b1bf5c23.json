{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js\";\nimport React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nimport { withRouter } from \"react-router-dom\";\nexport const AuthContext = React.createContext();\nexport const withAuth = Comp => {\n  return class WithAuth extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, props => {\n        return /*#__PURE__*/React.createElement(Comp, Object.assign({\n          handleLogin: props.handleLogin,\n          user: props.user,\n          signUpError: props.signUpError,\n          authLoading: props.authLoading,\n          loginError: props.loginError,\n          handleSignUp: props.handleSignUp,\n          isLoggedIn: props.isLoggedIn,\n          handleLogout: props.handleLogout\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        const {\n          data: user\n        } = await api.get('/auth/whoami');\n        this.setState({\n          authLoading: false,\n          isLoggedIn: true,\n          user\n        });\n      } catch (error) {\n        this.setState({\n          authLoading: false,\n          isLoggedIn: false,\n          user: null\n        });\n      }\n    };\n\n    this.handleLogin = async ({\n      email,\n      hashedPassword\n    }) => {\n      try {\n        const {\n          history\n        } = this.props;\n        const {\n          data: user\n        } = await api.post('/auth/login', {\n          email,\n          hashedPassword\n        });\n        this.setState({\n          isLoggedIn: true,\n          user\n        });\n        history.push('/');\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: error.response.data.errors[0]\n        });\n      }\n    };\n\n    this.handleSignUp = async ({\n      email,\n      hashedPassword,\n      name,\n      confirmationPassword\n    }) => {\n      try {\n        const {\n          history\n        } = this.props;\n\n        if (hashedPassword !== confirmationPassword) {\n          this.setState({\n            signUpError: 'Incorrect passwords'\n          });\n          return;\n        }\n\n        const {\n          data: user\n        } = await api.post('/auth/signup', {\n          email,\n          hashedPassword,\n          name\n        });\n        this.setState({\n          isLoggedIn: true,\n          user\n        });\n        history.push('/');\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          signUpError: error.response.data.errors[0]\n        });\n      }\n    };\n\n    this.handleLogout = async () => {\n      try {\n        const {\n          history\n        } = this.props;\n        await api.get('/auth/logout');\n        this.setState({\n          isLoggedIn: false,\n          user: null\n        });\n        history.push('/login');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      authLoading: true,\n      loginError: \"\"\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      isLoggedIn,\n      user,\n      loginError,\n      authLoading,\n      signUpError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        user,\n        authLoading,\n        loginError,\n        signUpError,\n        handleLogin: this.handleLogin,\n        handleLogout: this.handleLogout,\n        handleSignUp: this.handleSignUp\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport default withRouter(AuthProvider);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js"],"names":["React","Component","api","withRouter","AuthContext","createContext","withAuth","Comp","WithAuth","render","props","handleLogin","user","signUpError","authLoading","loginError","handleSignUp","isLoggedIn","handleLogout","AuthProvider","constructor","componentDidMount","data","get","setState","error","email","hashedPassword","history","post","push","response","errors","name","confirmationPassword","console","log","state","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const AuthContext = React.createContext();\n\nexport const withAuth = (Comp) => {\n  return class WithAuth extends Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {(props) => {\n            return (\n              <Comp\n                handleLogin={props.handleLogin}\n                user={props.user}\n                signUpError={props.signUpError}\n                authLoading={props.authLoading}\n                loginError={props.loginError}\n                handleSignUp={props.handleSignUp}\n                isLoggedIn={props.isLoggedIn}\n                handleLogout={props.handleLogout}\n                {...this.props}\n              />\n            );\n          }}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      authLoading: true,\n      loginError: \"\"\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      const { data: user } = await api.get('/auth/whoami')\n      this.setState({\n        authLoading: false,\n        isLoggedIn: true,\n        user,\n      })\n    } catch (error) {\n      this.setState({\n        authLoading: false,\n        isLoggedIn: false,\n        user: null,\n      })      \n    }\n  }\n\n  handleLogin = async ({ email, hashedPassword }) => {\n    try {\n      const { history } = this.props\n      const { data: user } = await api.post('/auth/login', { email, hashedPassword })\n      this.setState({\n        isLoggedIn: true,\n        user,\n      });\n      history.push('/')\n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: error.response.data.errors[0]\n      })      \n    }\n  };\n\n\n  handleSignUp = async ({ email, hashedPassword, name, confirmationPassword }) => {\n    try {\n      const { history } = this.props\n      if(hashedPassword !== confirmationPassword){\n        this.setState({ signUpError: 'Incorrect passwords' })\n        return\n      } \n      const { data: user } = await api.post('/auth/signup', { email, hashedPassword, name })\n      this.setState({\n        isLoggedIn: true,\n        user,\n      });\n      history.push('/')\n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        signUpError: error.response.data.errors[0]\n      })      \n    }\n  };\n\n  handleLogout = async () => {\n    try {\n      const { history } = this.props\n      await api.get('/auth/logout')\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n      })\n      history.push('/login')\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggedIn, user, loginError, authLoading, signUpError } = this.state;\n    return (\n      <AuthContext.Provider\n        value={{\n          isLoggedIn,\n          user,\n          authLoading,\n          loginError,\n          signUpError,\n          handleLogin: this.handleLogin,\n          handleLogout: this.handleLogout,\n          handleSignUp: this.handleSignUp\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(AuthProvider);"]},"metadata":{},"sourceType":"module"}