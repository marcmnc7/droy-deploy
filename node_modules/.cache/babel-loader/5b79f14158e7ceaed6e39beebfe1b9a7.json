{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/apiClient';\nconst DataContext = React.createContext(); // Consumer Wrapper\n\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, props => /*#__PURE__*/React.createElement(Comp, Object.assign({}, this.props, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 23\n        }\n      })));\n    }\n\n  };\n}; // Provider def\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.switchMode = () => {\n      const {\n        mode\n      } = this.state;\n      this.setState({\n        mode: mode === 'edit' ? 'view' : 'edit'\n      });\n    };\n\n    this.deleteComponent = elementCode => {\n      const stateCopy = { ...this.state\n      };\n      const {\n        userLayoutObj: newUserLayoutObj\n      } = stateCopy;\n      let fromIndex = 0;\n\n      for (let i = 0; i < newUserLayoutObj.length; i++) {\n        const c = newUserLayoutObj[i];\n\n        if (c.code === elementCode) {\n          fromIndex = i;\n          break;\n        }\n      }\n\n      newUserLayoutObj.splice(fromIndex, 1);\n      this.setState({\n        userLayoutObj: newUserLayoutObj\n      });\n    };\n\n    this.moveComponent = (elementCode, direction) => {\n      const stateCopy = { ...this.state\n      };\n      const {\n        userLayoutObj: newUserLayoutObj\n      } = stateCopy;\n      let fromIndex = 0;\n      let element;\n\n      for (let i = 0; i < newUserLayoutObj.length; i++) {\n        const c = newUserLayoutObj[i];\n\n        if (c.code === elementCode) {\n          element = c;\n          fromIndex = i;\n          break;\n        }\n      }\n\n      newUserLayoutObj.splice(fromIndex, 1);\n      if (direction === 'down') newUserLayoutObj.splice(fromIndex + 1, 0, element);else if (direction === 'up') newUserLayoutObj.splice(fromIndex - 1, 0, element);\n      this.setState({\n        userLayoutObj: newUserLayoutObj\n      });\n    };\n\n    this.save = async projectId => {\n      try {\n        this.setState({\n          savingStep: 'Saving...'\n        });\n        const {\n          userLayoutObj\n        } = this.state;\n        await api.put(`/projects/${projectId}`, {\n          componentsConfiguration: userLayoutObj\n        });\n        setTimeout(() => {\n          this.setState({\n            savingStep: 'OK'\n          });\n          setTimeout(() => {\n            this.setState({\n              savingStep: 'Save'\n            });\n          }, 500);\n        }, 500);\n      } catch (error) {\n        alert(\"Error al guardar.\");\n      }\n    };\n\n    this.saveComponentInfoToContext = (componentCode, componentAttr, attrContent) => {\n      const stateCopy = { ...this.state\n      };\n      const {\n        userLayoutObj: newUserLayoutObj\n      } = stateCopy;\n      const saveTo = newUserLayoutObj.find(userObject => userObject.code === componentCode);\n      saveTo.info[componentAttr] = attrContent;\n      this.setState({\n        userLayoutObj: newUserLayoutObj\n      });\n    };\n\n    this.addComponent = (componentCode, defaultInfo, componentType) => {\n      const stateCopy = { ...this.state\n      };\n      stateCopy.userLayoutObj.push({\n        code: componentCode,\n        info: defaultInfo,\n        componentType: componentType\n      });\n      this.setState({\n        userLayoutObj: stateCopy.userLayoutObj\n      });\n    };\n\n    this.addLink = componentCode => {\n      const stateCopy = { ...this.state\n      };\n      const targetComponent = stateCopy.userLayoutObj.find(c => c.code === componentCode);\n      let totalLinks = 0;\n\n      for (const key in targetComponent.info) {\n        if (targetComponent.info[key].type === 'link') totalLinks += 1;\n      }\n\n      targetComponent.info[`link${totalLinks + 1}`] = {\n        type: 'link',\n        text: `Link${totalLinks + 1}`,\n        href: 'http://www.google.es',\n        toNewPage: true\n      };\n      console.log(777, targetComponent);\n      this.setState({\n        userLayoutObj: stateCopy.userLayoutObj\n      });\n    };\n\n    this.getProjectInfo = async projectId => {\n      try {\n        const {\n          data: {\n            componentsConfiguration,\n            style,\n            _id\n          }\n        } = await api.get(`/projects/${projectId}`);\n        this.setState({\n          projectId: _id,\n          userLayoutObj: componentsConfiguration,\n          projectStyle: style\n        });\n      } catch (error) {\n        this.setState({\n          dataError: \"Unable to get your project data\"\n        });\n      }\n    };\n\n    this.state = {\n      mode: 'edit',\n      userLayoutObj: [],\n      projectStyle: \"\",\n      projectId: \"\",\n      dataError: \"\",\n      savingStep: 'Save'\n    };\n  }\n  /* SWITCH MODES */\n\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getProjectInfo: this.getProjectInfo,\n        switchMode: this.switchMode,\n        moveComponent: this.moveComponent,\n        addComponent: this.addComponent,\n        deleteComponent: this.deleteComponent,\n        save: this.save,\n        addLink: this.addLink,\n        ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js"],"names":["React","Component","PropTypes","api","DataContext","createContext","withData","Comp","WithData","render","props","DataProvider","constructor","switchMode","mode","state","setState","deleteComponent","elementCode","stateCopy","userLayoutObj","newUserLayoutObj","fromIndex","i","length","c","code","splice","moveComponent","direction","element","save","projectId","savingStep","put","componentsConfiguration","setTimeout","error","alert","saveComponentInfoToContext","componentCode","componentAttr","attrContent","saveTo","find","userObject","info","addComponent","defaultInfo","componentType","push","addLink","targetComponent","totalLinks","key","type","text","href","toNewPage","console","log","getProjectInfo","data","style","_id","get","projectStyle","dataError","children","propTypes","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport api from '../services/apiClient'\n\nconst DataContext = React.createContext()\n\n// Consumer Wrapper\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render() {\n      return (\n        <DataContext.Consumer>\n          {(props) => <Comp {...this.props} {...props} />}\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\n// Provider def\nclass DataProvider extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      mode: 'edit',\n      userLayoutObj: [],\n      projectStyle: \"\",\n      projectId: \"\",\n      dataError: \"\",\n      savingStep: 'Save',\n    }\n  }\n\n  /* SWITCH MODES */\n  switchMode = () => {\n    const { mode } = this.state\n    this.setState({ mode: mode === 'edit' ? 'view' : 'edit' })\n  }\n\n  deleteComponent = (elementCode) => {\n    const stateCopy = { ...this.state }\n    const { userLayoutObj: newUserLayoutObj } = stateCopy\n    let fromIndex = 0;\n    for (let i = 0; i < newUserLayoutObj.length; i++) {\n      const c = newUserLayoutObj[i];\n      if (c.code === elementCode) {\n        fromIndex = i; break\n      }\n    }\n    newUserLayoutObj.splice(fromIndex, 1)\n    this.setState({ userLayoutObj: newUserLayoutObj })\n  }\n\n  moveComponent = (elementCode, direction) => {\n    const stateCopy = { ...this.state }\n    const { userLayoutObj: newUserLayoutObj } = stateCopy\n    let fromIndex = 0; let element\n    for (let i = 0; i < newUserLayoutObj.length; i++) {\n      const c = newUserLayoutObj[i];\n      if (c.code === elementCode) {\n        element = c; fromIndex = i; break\n      }\n    }\n    newUserLayoutObj.splice(fromIndex, 1)\n    if (direction === 'down') newUserLayoutObj.splice(fromIndex + 1, 0, element)\n    else if (direction === 'up') newUserLayoutObj.splice(fromIndex - 1, 0, element)\n    this.setState({ userLayoutObj: newUserLayoutObj })\n  }\n\n\n  save = async (projectId) => {\n    try {\n      this.setState({ savingStep: 'Saving...' })\n      const { userLayoutObj } = this.state\n      await api.put(`/projects/${projectId}`, { componentsConfiguration: userLayoutObj })\n      setTimeout(() => {\n        this.setState({ savingStep: 'OK' })\n        setTimeout(() => { this.setState({ savingStep: 'Save' }) }, 500);\n      }, 500);\n    } catch (error) {\n      alert(\"Error al guardar.\")\n    }   \n  }\n\n  saveComponentInfoToContext = (componentCode, componentAttr, attrContent) => {\n    const stateCopy = {...this.state}\n    const { userLayoutObj: newUserLayoutObj } = stateCopy\n    const saveTo = newUserLayoutObj.find(userObject => userObject.code === componentCode)\n    saveTo.info[componentAttr] = attrContent\n    this.setState({\n      userLayoutObj: newUserLayoutObj\n    })\n  };\n\n  addComponent = (componentCode, defaultInfo, componentType) => {\n    const stateCopy = { ...this.state }\n    stateCopy.userLayoutObj.push({\n      code: componentCode,\n      info: defaultInfo,\n      componentType: componentType\n    })\n    this.setState({\n      userLayoutObj: stateCopy.userLayoutObj,\n    })\n  }\n\n  addLink = (componentCode) => {\n    const stateCopy = { ...this.state }\n    const targetComponent = stateCopy.userLayoutObj.find(c => c.code === componentCode)\n    let totalLinks = 0\n    for (const key in targetComponent.info) {\n      if(targetComponent.info[key].type === 'link') totalLinks += 1\n    }\n    targetComponent.info[`link${totalLinks+1}`] = {type: 'link', text: `Link${totalLinks+1}`, href: 'http://www.google.es', toNewPage:true}\n    console.log(777, targetComponent)\n    this.setState({\n      userLayoutObj: stateCopy.userLayoutObj\n    })\n  }\n\n  getProjectInfo = async (projectId) => {\n    try {\n      const { data: { componentsConfiguration, style, _id } } = await api.get(`/projects/${projectId}`)\n      this.setState({\n        projectId: _id,\n        userLayoutObj: componentsConfiguration,\n        projectStyle: style,\n      })\n    } catch (error) {\n      this.setState({ dataError: \"Unable to get your project data\" })\n    }\n  }\n\n  render () {\n    const { children } = this.props\n\n    return (\n      <DataContext.Provider value={{\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getProjectInfo: this.getProjectInfo,\n        switchMode: this.switchMode,\n        moveComponent: this.moveComponent,\n        addComponent: this.addComponent,\n        deleteComponent: this.deleteComponent,\n        save: this.save,\n        addLink: this.addLink,\n        ...this.state\n\n      }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}