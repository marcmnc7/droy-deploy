{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/ModalChangeInfo.js\";\nimport React, { Component } from 'react';\nexport default class ModalDelete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const infoCopy = { ...this.state.info\n      };\n      infoCopy[e.target.name] = e.target.name == \"toNewPage\" ? e.target.checked : e.target.value;\n      this.setState({\n        info: infoCopy\n      });\n    };\n\n    this.state = {\n      info: this.props.info,\n      error: ''\n    };\n  }\n\n  render() {\n    const {\n      onClose,\n      deleteLink,\n      attributeSelected\n    } = this.props;\n    const {\n      info\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"close-modal\",\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"close-modal-image\",\n      src: \"/img/close-icon.png\",\n      alt: \"delete-project\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-create-project\",\n      onSubmit: this.changeInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-field-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-modal\",\n      htmlFor: \"display-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Display text:\"), /*#__PURE__*/React.createElement(\"input\", {\n      required: \"required\",\n      className: \"input-modal\",\n      type: \"text\",\n      name: \"text\",\n      value: info.text,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    })), info.type === 'link' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-field-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-modal\",\n      htmlFor: \"link-to\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Link destination:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"link-to\",\n      required: \"required\",\n      className: \"input-modal\",\n      type: \"text\",\n      name: \"href\",\n      value: info.href,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-modal\",\n      htmlFor: \"link-to\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Open in new window?\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"checkbox\",\n      onChange: this.handleChange,\n      checked: info.toNewPage,\n      type: \"checkbox\",\n      name: \"toNewPage\",\n      id: \"toNewPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-modal\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Update info\")), info.type === 'link' && /*#__PURE__*/React.createElement(\"button\", {\n      \"data-id\": attributeSelected,\n      onClick: deleteLink,\n      className: \"button-modal-red\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }\n    }, \"Delete link\")));\n  }\n\n}","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/ModalChangeInfo.js"],"names":["React","Component","ModalDelete","constructor","props","handleChange","e","infoCopy","state","info","target","name","checked","value","setState","error","render","onClose","deleteLink","attributeSelected","changeInfo","text","type","href","toNewPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AACjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQHC,CAAD,IAAO;AACpB,YAAMC,QAAQ,GAAG,EAAC,GAAG,KAAKC,KAAL,CAAWC;AAAf,OAAjB;AACAF,MAAAA,QAAQ,CAACD,CAAC,CAACI,MAAF,CAASC,IAAV,CAAR,GAA0BL,CAAC,CAACI,MAAF,CAASC,IAAT,IAAiB,WAAjB,GAA+BL,CAAC,CAACI,MAAF,CAASE,OAAxC,GAAkDN,CAAC,CAACI,MAAF,CAASG,KAArF;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAEF;AADM,OAAd;AAGD,KAdkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IADN;AAEXM,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAUDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB,QAA6C,KAAKf,KAAxD;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAES,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,GAAG,EAAC,qBAAvC;AAA6D,MAAA,GAAG,EAAC,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAsC,MAAA,QAAQ,EAAE,KAAKG,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAO,MAAA,QAAQ,EAAC,UAAhB;AAA2B,MAAA,SAAS,EAAC,aAArC;AAAmD,MAAA,IAAI,EAAC,MAAxD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEX,IAAI,CAACY,IAFd;AAGE,MAAA,QAAQ,EAAE,KAAKhB,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAQGI,IAAI,CAACa,IAAL,KAAc,MAAd,iBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,QAAQ,EAAC,UAA7B;AAAwC,MAAA,SAAS,EAAC,aAAlD;AAAgE,MAAA,IAAI,EAAC,MAArE;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,KAAK,EAAEb,IAAI,CAACc,IAFZ;AAGA,MAAA,QAAQ,EAAE,KAAKlB,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,eAOE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,QAAQ,EAAE,KAAKA,YAA3C;AAAyD,MAAA,OAAO,EAAEI,IAAI,CAACe,SAAvE;AAAkF,MAAA,IAAI,EAAC,UAAvF;AAAkG,MAAA,IAAI,EAAC,WAAvG;AAAmH,MAAA,EAAE,EAAC,WAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CATJ,eAmBE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBF,CAJF,EAyBGf,IAAI,CAACa,IAAL,KAAc,MAAd,iBAAwB;AAAQ,iBAASH,iBAAjB;AAAoC,MAAA,OAAO,EAAED,UAA7C;AAAyD,MAAA,SAAS,EAAC,kBAAnE;AAAsF,MAAA,IAAI,EAAC,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAzB3B,CADF,CADF;AA+BD;;AAnDgD","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ModalDelete extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      info: this.props.info, \n      error: ''\n    }\n  }\n\n  handleChange = (e) => {\n    const infoCopy = {...this.state.info}\n    infoCopy[e.target.name] = e.target.name == \"toNewPage\" ? e.target.checked : e.target.value\n    this.setState({\n      info: infoCopy\n    });\n  }\n\n  render() {\n    const { onClose, deleteLink, attributeSelected } = this.props\n    const { info } = this.state\n    return (\n      <div className='modal-container'>\n        <div className='modal-style'>\n          <button className='close-modal' onClick={onClose}>\n            <img className='close-modal-image' src=\"/img/close-icon.png\" alt='delete-project'></img>\n          </button>\n          <form className='form-create-project' onSubmit={this.changeInfo}>\n            <div className=\"modal-field-group\">\n              <label className=\"label-modal\" htmlFor=\"display-text\">Display text:</label>\n              <input required=\"required\" className='input-modal' type=\"text\"\n                name=\"text\"\n                value={info.text}\n                onChange={this.handleChange} />\n            </div>\n            {info.type === 'link' &&\n              <div className=\"modal-field-group\">\n                <label className=\"label-modal\" htmlFor=\"link-to\">Link destination:</label>\n                <input id=\"link-to\" required=\"required\" className='input-modal' type=\"text\"\n                name=\"href\"\n                value={info.href}\n                onChange={this.handleChange} />\n                <label className=\"label-modal\" htmlFor=\"link-to\">Open in new window?</label>\n                <input className=\"checkbox\" onChange={this.handleChange} checked={info.toNewPage} type=\"checkbox\" name=\"toNewPage\" id=\"toNewPage\"/>\n              </div>\n            }\n            <button className='button-modal' type='submit'>Update info</button>\n          </form>\n          {info.type === 'link' && <button data-id={attributeSelected} onClick={deleteLink} className='button-modal-red' type='submit'>Delete link</button>}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}