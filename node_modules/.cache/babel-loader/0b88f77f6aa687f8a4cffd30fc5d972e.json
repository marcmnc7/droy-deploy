{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\nimport OptionsBar from '../droy/OptionsBar';\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeInfo = e => {\n      const {\n        code\n      } = this.props;\n      const {\n        saveComponentInfoToContext\n      } = this.props;\n      const newText = prompt('Inserta el nuevo texto');\n      console.log('in change info componentbase', code, e.target.attributes['data-id'].value);\n      const attr = e.target.attributes['data-id'].value;\n      saveComponentInfoToContext(code, attr, newText);\n      /* \n      const newInfo = {  }\n      const attr = e.target.attributes['data-id'].value\n      newInfo[attr] = newText\n       this.setState({ info: newInfo },\n        () => {\n          saveComponentInfoToContext(info, code)\n        }) */\n    };\n\n    this.getComponentInfo = () => {\n      const {\n        userLayoutObj,\n        code\n      } = this.props;\n      return userLayoutObj.filter(c => c.code === code)[0].info;\n    };\n\n    this.state = {\n      /*\n      info: {...this.props.info},\n      code: this.props.code, */\n    };\n  }\n\n  render() {\n    const {\n      mode,\n      moveDownComponent,\n      code\n    } = this.props;\n    const UserComp = MATCH_COMPONENTS[code];\n    console.log(22, this.props.userLayoutObj);\n    console.log(11, code, this.getComponentInfo());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-component-base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, mode === \"edit\" ? /*#__PURE__*/React.createElement(UserComp, {\n      info: this.getComponentInfo(),\n      code: code,\n      changeInfo: this.changeInfo,\n      updateInfo: this.updateInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OptionsBar, {\n      code: code,\n      moveDownComponent: moveDownComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(UserComp, Object.assign({}, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","OptionsBar","UserComponentBase","constructor","props","changeInfo","e","code","saveComponentInfoToContext","newText","prompt","console","log","target","attributes","value","attr","getComponentInfo","userLayoutObj","filter","c","info","state","render","mode","moveDownComponent","UserComp","updateInfo","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACxCM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SASpBC,UAToB,GASNC,CAAD,IAAO;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKH,KAAtB;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAiC,KAAKJ,KAA5C;AACA,YAAMK,OAAO,GAAGC,MAAM,CAAC,wBAAD,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CL,IAA5C,EAAkDD,CAAC,CAACO,MAAF,CAASC,UAAT,CAAoB,SAApB,EAA+BC,KAAjF;AACA,YAAMC,IAAI,GAAGV,CAAC,CAACO,MAAF,CAASC,UAAT,CAAoB,SAApB,EAA+BC,KAA5C;AACAP,MAAAA,0BAA0B,CAACD,IAAD,EAAOS,IAAP,EAAaP,OAAb,CAA1B;AACA;;;;;;;;AASD,KAzBmB;;AAAA,SA2BpBQ,gBA3BoB,GA2BD,MAAM;AACvB,YAAM;AAAEC,QAAAA,aAAF;AAAiBX,QAAAA;AAAjB,UAA0B,KAAKH,KAArC;AACA,aAAOc,aAAa,CAACC,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACb,IAAF,KAAWA,IAArC,EAA2C,CAA3C,EAA8Cc,IAArD;AACD,KA9BmB;;AAElB,SAAKC,KAAL,GAAa;AACX;;;AADW,KAAb;AAKD;;AAyBDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,iBAAR;AAA2BlB,MAAAA;AAA3B,QAAqC,KAAKH,KAAhD;AACA,UAAMsB,QAAQ,GAAG5B,gBAAgB,CAACS,IAAD,CAAjC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgB,KAAKR,KAAL,CAAWc,aAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgBL,IAAhB,EAAsB,KAAKU,gBAAL,EAAtB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIO,IAAI,KAAK,MAAT,gBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKP,gBAAL,EAAhB;AAAyC,MAAA,IAAI,EAAEV,IAA/C;AAAqD,MAAA,UAAU,EAAE,KAAKF,UAAtE;AAAkF,MAAA,UAAU,EAAE,KAAKsB,UAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEpB,IAAlB;AAAwB,MAAA,iBAAiB,EAAEkB,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,gBAIE,oBAAC,QAAD,oBAAc,KAAKH,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALN,CADF;AAUD;;AAhDuC;;AAmD1CpB,iBAAiB,CAAC0B,SAAlB,GAA8B;AAC5BrB,EAAAA,IAAI,EAAER,SAAS,CAAC8B;AADY,CAA9B;AAIA,eAAe7B,QAAQ,CAACE,iBAAD,CAAvB","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\nimport OptionsBar from '../droy/OptionsBar'\n\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      /*\n      info: {...this.props.info},\n      code: this.props.code, */\n    }\n  }\n\n  changeInfo = (e) => {\n    const { code } = this.props\n    const { saveComponentInfoToContext } = this.props\n    const newText = prompt('Inserta el nuevo texto')\n    console.log('in change info componentbase', code, e.target.attributes['data-id'].value)\n    const attr = e.target.attributes['data-id'].value\n    saveComponentInfoToContext(code, attr, newText)\n    /* \n    const newInfo = {  }\n    const attr = e.target.attributes['data-id'].value\n    newInfo[attr] = newText\n\n    this.setState({ info: newInfo },\n      () => {\n        saveComponentInfoToContext(info, code)\n      }) */\n  }\n\n  getComponentInfo = () => {\n    const { userLayoutObj, code } = this.props\n    return userLayoutObj.filter(c => c.code === code)[0].info\n  }\n  \n  render () {\n    const { mode, moveDownComponent, code  } = this.props\n    const UserComp = MATCH_COMPONENTS[code]\n    console.log(22, this.props.userLayoutObj)\n    console.log(11, code, this.getComponentInfo())\n    return (\n      <div className=\"user-component-base\">\n        { mode === \"edit\"\n          ? <UserComp info={this.getComponentInfo()} code={code} changeInfo={this.changeInfo} updateInfo={this.updateInfo}>\n              <OptionsBar code={code} moveDownComponent={moveDownComponent} />\n            </UserComp>\n          : <UserComp {...this.state }/>\n        }\n      </div>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)"]},"metadata":{},"sourceType":"module"}