{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\nimport OptionsBar from '../droy/OptionsBar';\nimport ModalChangeInfo from '../droy/ModalChangeInfo';\nimport { uuid } from 'uuidv4';\nimport '../../styles/user-componentBase.css';\nimport firebase from '../../services/firebase';\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenModal = e => {\n      this.setState({\n        openChangeModal: true,\n        attributeSelected: e.target.attributes['data-id'].value\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        openChangeModal: false,\n        attributeSelected: ''\n      });\n    };\n\n    this.changeImage = async e => {\n      const {\n        projectId,\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const attr = e.target.attributes['data-id'].value;\n      const file = e.target.files[0];\n\n      if (file.size > 20000) {\n        alert('Imagen demasiado grande.');\n        return;\n      }\n\n      const randomFileName = uuid();\n      const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`);\n      await storageRef.put(file);\n      const downloadUrl = await storageRef.getDownloadURL();\n      saveComponentInfoToContext(code, attr, downloadUrl);\n    };\n\n    this.state = {\n      optionsModal: false,\n      attributeSelected: ''\n    };\n  }\n\n  render() {\n    const {\n      mode,\n      moveComponent,\n      code,\n      deleteComponent,\n      saveComponentInfoToContext,\n      userLayoutObj\n    } = this.props;\n    const {\n      attributeSelected,\n      openChangeModal\n    } = this.state;\n    const UserComp = MATCH_COMPONENTS[code];\n    const componentInfo = userLayoutObj.filter(c => c.code === code)[0].info;\n    const componentProps = {};\n\n    if (mode === 'edit') {\n      componentProps['openChangeModal'] = this.handleOpenModal;\n      componentProps['changeImage'] = this.changeImage;\n    }\n\n    componentProps['info'] = componentInfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UserComp, Object.assign({}, componentProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), mode === \"edit\" && /*#__PURE__*/React.createElement(OptionsBar, {\n      code: code,\n      deleteComponent: deleteComponent,\n      moveComponent: moveComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }\n    }), mode === \"edit\" && openChangeModal && /*#__PURE__*/React.createElement(ModalChangeInfo, {\n      oldText: componentInfo[attributeSelected],\n      code: code,\n      attributeSelected: attributeSelected,\n      saveComponentInfoToContext: saveComponentInfoToContext,\n      onClose: this.handleCloseModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 50\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","OptionsBar","ModalChangeInfo","uuid","firebase","UserComponentBase","constructor","props","handleOpenModal","e","setState","openChangeModal","attributeSelected","target","attributes","value","handleCloseModal","changeImage","projectId","code","saveComponentInfoToContext","attr","file","files","size","alert","randomFileName","storageRef","storage","ref","auth","currentUser","uid","put","downloadUrl","getDownloadURL","state","optionsModal","render","mode","moveComponent","deleteComponent","userLayoutObj","UserComp","componentInfo","filter","c","info","componentProps","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\nimport OptionsBar from '../droy/OptionsBar'\nimport ModalChangeInfo from '../droy/ModalChangeInfo'\nimport { uuid } from 'uuidv4'\nimport '../../styles/user-componentBase.css'\nimport firebase from '../../services/firebase'\n\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      optionsModal: false,\n      attributeSelected: '',\n    }\n  }\n\n  handleOpenModal = (e) =>{\n    this.setState({\n      openChangeModal: true,\n      attributeSelected: e.target.attributes['data-id'].value\n    })\n  }\n\n  handleCloseModal = () =>{\n    this.setState({\n      openChangeModal: false,\n      attributeSelected: ''\n    })\n  }\n\n  changeImage = async e => {\n    const { projectId, code, saveComponentInfoToContext } = this.props\n    const attr = e.target.attributes['data-id'].value\n    const file = e.target.files[0]\n    if(file.size > 20000){\n      alert('Imagen demasiado grande.')\n      return\n    }\n    const randomFileName = uuid()\n    const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`)\n    await storageRef.put(file)\n    const downloadUrl = await storageRef.getDownloadURL()\n    saveComponentInfoToContext(code, attr, downloadUrl)\n  }\n\n  render () {\n    const { mode, moveComponent , code, deleteComponent, saveComponentInfoToContext, userLayoutObj  } = this.props\n    const { attributeSelected, openChangeModal } = this.state\n    const UserComp = MATCH_COMPONENTS[code]\n    const componentInfo = userLayoutObj.filter(c => c.code === code)[0].info\n    const componentProps = {}\n    if(mode === 'edit'){\n      componentProps['openChangeModal'] = this.handleOpenModal\n      componentProps['changeImage'] = this.changeImage\n    }\n    componentProps['info'] = componentInfo \n    return (\n      <div>\n        <UserComp {...componentProps}>\n          {mode === \"edit\" && <OptionsBar code={code} deleteComponent={deleteComponent} moveComponent={moveComponent}/>}\n          {mode === \"edit\" && openChangeModal && <ModalChangeInfo oldText={componentInfo[attributeSelected]} code={code} attributeSelected={attributeSelected} saveComponentInfoToContext={saveComponentInfoToContext} onClose={this.handleCloseModal}/>}\n        </UserComp>\n      </div>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)\n"]},"metadata":{},"sourceType":"module"}