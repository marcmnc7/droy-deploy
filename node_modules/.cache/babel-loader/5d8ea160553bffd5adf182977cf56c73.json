{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\nimport OptionsBar from '../droy/OptionsBar';\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeInfo = e => {\n      const {\n        mode\n      } = this.props;\n\n      if (mode == 'edit') {\n        const {\n          info,\n          code\n        } = this.state;\n        const newText = prompt('Inserta el nuevo texto');\n        const newInfo = { ...info\n        };\n        newInfo[e.target.id] = newText;\n        this.setState({\n          info: newInfo\n        });\n      }\n    };\n\n    this.componentDidUpdate = () => {\n      const {\n        saveComponentInfoToContext\n      } = this.props;\n      const {\n        info,\n        code\n      } = this.state;\n      saveComponentInfoToContext(info, code);\n    };\n\n    this.state = {\n      info: this.props.info,\n      code: this.props.code\n    };\n  }\n\n  render() {\n    const {\n      code,\n      mode\n    } = this.props;\n    const UserComp = MATCH_COMPONENTS[code];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, mode === \"edit\" && /*#__PURE__*/React.createElement(UserComp, Object.assign({\n      optionsBar: OptionsBar,\n      changeInfo: this.changeInfo,\n      updateInfo: this.updateInfo\n    }, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 30\n      }\n    })), mode === \"view\" && /*#__PURE__*/React.createElement(UserComp, Object.assign({\n      changeInfo: this.changeInfo,\n      updateInfo: this.updateInfo\n    }, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 30\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","OptionsBar","UserComponentBase","constructor","props","changeInfo","e","mode","info","code","state","newText","prompt","newInfo","target","id","setState","componentDidUpdate","saveComponentInfoToContext","render","UserComp","updateInfo","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACxCM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAQpBC,UARoB,GAQNC,CAAD,IAAO;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKH,KAAtB;;AACA,UAAGG,IAAI,IAAI,MAAX,EAAkB;AAChB,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAiB,KAAKC,KAA5B;AACA,cAAMC,OAAO,GAAGC,MAAM,CAAC,wBAAD,CAAtB;AACA,cAAMC,OAAO,GAAG,EAAC,GAAGL;AAAJ,SAAhB;AACAK,QAAAA,OAAO,CAACP,CAAC,CAACQ,MAAF,CAASC,EAAV,CAAP,GAAuBJ,OAAvB;AACA,aAAKK,QAAL,CAAc;AAAER,UAAAA,IAAI,EAAEK;AAAR,SAAd;AACD;AACF,KAjBmB;;AAAA,SAmBpBI,kBAnBoB,GAmBC,MAAM;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAiC,KAAKd,KAA5C;AACA,YAAM;AAAEI,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAiB,KAAKC,KAA5B;AACAQ,MAAAA,0BAA0B,CAACV,IAAD,EAAOC,IAAP,CAA1B;AACD,KAvBmB;;AAElB,SAAKC,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IADN;AAEXC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK;AAFN,KAAb;AAID;;AAmBDU,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEV,MAAAA,IAAF;AAAQF,MAAAA;AAAR,QAAiB,KAAKH,KAA5B;AACA,UAAMgB,QAAQ,GAAGtB,gBAAgB,CAACW,IAAD,CAAjC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIF,IAAI,KAAK,MAAT,iBAAmB,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEN,UAAtB;AAAkC,MAAA,UAAU,EAAE,KAAKI,UAAnD;AAA+D,MAAA,UAAU,EAAE,KAAKgB;AAAhF,OAAgG,KAAKX,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADvB,EAEIH,IAAI,KAAK,MAAT,iBAAmB,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKF,UAA3B;AAAuC,MAAA,UAAU,EAAE,KAAKgB;AAAxD,OAAwE,KAAKX,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFvB,CADF;AAMD;;AAnCuC;;AAsC1CR,iBAAiB,CAACoB,SAAlB,GAA8B;AAC5Bb,EAAAA,IAAI,EAAEV,SAAS,CAACwB;AADY,CAA9B;AAIA,eAAevB,QAAQ,CAACE,iBAAD,CAAvB","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\nimport OptionsBar from '../droy/OptionsBar'\n\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      info: this.props.info,\n      code: this.props.code,\n    }\n  }\n\n  changeInfo = (e) => {\n    const { mode } = this.props\n    if(mode == 'edit'){\n      const { info, code } = this.state\n      const newText = prompt('Inserta el nuevo texto')\n      const newInfo = {...info}\n      newInfo[e.target.id] = newText\n      this.setState({ info: newInfo })\n    }\n  }\n  \n  componentDidUpdate = () => {\n    const { saveComponentInfoToContext } = this.props\n    const { info, code } = this.state\n    saveComponentInfoToContext(info, code)\n  }\n\n  render () {\n    const { code, mode } = this.props\n    const UserComp = MATCH_COMPONENTS[code]\n    return (\n      <div>\n        { mode === \"edit\" && <UserComp optionsBar={OptionsBar} changeInfo={this.changeInfo} updateInfo={this.updateInfo} {...this.state }/> }\n        { mode === \"view\" && <UserComp changeInfo={this.changeInfo} updateInfo={this.updateInfo} {...this.state }/> }\n      </div>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)"]},"metadata":{},"sourceType":"module"}