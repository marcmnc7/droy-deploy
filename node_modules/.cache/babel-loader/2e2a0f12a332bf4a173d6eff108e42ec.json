{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\nimport OptionsBar from '../droy/OptionsBar';\nimport ModalChangeInfo from '../droy/ModalChangeInfo';\nimport { uuid } from 'uuidv4';\nimport '../../styles/user-componentBase.css';\nimport firebase from '../../services/firebase';\nimport alias from '../../utils/alias';\n/* Provides all the funcions to manage all component content and style */\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenModal = e => {\n      const {\n        userLayoutObj,\n        code\n      } = this.props;\n      const attrCode = e.target.attributes['data-id'].value;\n      const attributeInfo = alias.findByCode(userLayoutObj, code);\n      this.setState({\n        openChangeModal: true,\n        attributeSelected: attrCode,\n        attributeSelectedInfo: attributeInfo.info[attrCode],\n        attributeSelectedStyle: attributeInfo.style[attrCode]\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        openChangeModal: false,\n        attributeSelected: '',\n        attributeSelectedInfo: '',\n        attributeSelectedStyle: ''\n      });\n    };\n\n    this.changeImage = async e => {\n      const {\n        projectId,\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const attr = e.target.attributes['data-id'].value;\n      const file = e.target.files[0];\n\n      if (file.size > 20000) {\n        alert('Imagen demasiado grande.');\n      } else {\n        const randomFileName = uuid();\n        const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`);\n        await storageRef.put(file);\n        const downloadUrl = await storageRef.getDownloadURL();\n        saveComponentInfoToContext(code, attr, {\n          src: downloadUrl\n        });\n      }\n    };\n\n    this.addLink = () => {\n      const {\n        code,\n        saveComponentInfoToContext,\n        userLayoutObj\n      } = this.props;\n      const targetComponentInfo = alias.findByCode(userLayoutObj, code).info;\n      const linksIds = [];\n\n      for (const key in targetComponentInfo) {\n        if (targetComponentInfo[key].type !== 'link') continue;\n        linksIds.push(parseInt(key.match(/\\d+$/)[0]));\n      }\n\n      if (linksIds.length >= 5) return;\n      let newAttr = '';\n      if (!linksIds.length) newAttr = 'link1';else newAttr = `link${Math.max(...linksIds) + 1}`; // Cambiar link por default a pagina de quienes somos de Droy\n\n      const newInfo = {\n        style: {\n          fontSize: '1rem'\n        },\n        type: 'link',\n        text: \"New link\",\n        href: 'http://www.google.es',\n        toNewPage: true\n      };\n      saveComponentInfoToContext(code, newAttr, newInfo);\n    };\n\n    this.deleteLink = e => {\n      const {\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const {\n        attributeSelected\n      } = this.state;\n      saveComponentInfoToContext(code, attributeSelected, undefined);\n      this.handleCloseModal();\n    };\n\n    this.changeInfo = info => {\n      const {\n        attributeSelected\n      } = this.state;\n      const {\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      saveComponentInfoToContext(code, attributeSelected, info);\n      this.handleCloseModal();\n    };\n\n    this.changeColor = color => {\n      const {\n        code,\n        saveUserComponentStyleInfoToContext\n      } = this.props;\n      saveUserComponentStyleInfoToContext(code, {\n        backgroundColor: color\n      });\n    };\n\n    this.changeHeight = height => {\n      const {\n        code,\n        saveUserComponentStyleInfoToContext\n      } = this.props;\n      saveUserComponentStyleInfoToContext(code, {\n        height\n      });\n    };\n\n    this.changeBackgroundImage = async e => {\n      const {\n        projectId,\n        code,\n        saveUserComponentStyleInfoToContext\n      } = this.props;\n      const file = e.target.files[0];\n\n      if (file.size > 20000) {\n        alert('Imagen demasiado grande.');\n      } else {\n        const randomFileName = uuid();\n        const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`);\n        await storageRef.put(file);\n        const downloadUrl = await storageRef.getDownloadURL();\n        saveUserComponentStyleInfoToContext(code, {\n          backgroundImage: `url(\"${downloadUrl}\")`\n        });\n      }\n    };\n\n    this.state = {\n      optionsModal: false,\n      attributeSelected: '',\n      attributeSelectedInfo: '',\n      attributeSelectedStyle: ''\n    };\n  }\n  /* Opens the editor modal setting the target to the state */\n\n\n  /* Gets the real React components and pass new funcionalities */\n  render() {\n    const {\n      mode,\n      moveComponent,\n      componentOptions,\n      code,\n      deleteComponent,\n      userLayoutObj\n    } = this.props;\n    const {\n      attributeSelected,\n      openChangeModal,\n      attributeSelectedInfo,\n      attributeSelectedStyle\n    } = this.state;\n    const UserComp = MATCH_COMPONENTS[code];\n    const {\n      info: componentInfo,\n      style: contentStyle,\n      componentUserOverrideStyle: userStyle\n    } = alias.findByCode(userLayoutObj, code);\n    const componentProps = {};\n    componentProps['info'] = componentInfo;\n    componentProps['contentStyle'] = contentStyle;\n    componentProps['userStyle'] = userStyle;\n\n    if (mode === 'edit') {\n      componentProps['openChangeModal'] = this.handleOpenModal;\n      componentProps['changeImage'] = this.changeImage;\n    }\n\n    const optionsProps = {};\n    optionsProps['code'] = code;\n    optionsProps['deleteComponent'] = deleteComponent;\n    optionsProps['moveComponent'] = moveComponent;\n    optionsProps['style'] = attributeSelectedStyle;\n    if (componentOptions.includes('changeHeight')) optionsProps['changeHeight'] = this.changeHeight;\n    if (componentOptions.includes('addLinks')) optionsProps['addLink'] = this.addLink;\n    if (componentOptions.includes('backgroundColor')) optionsProps['changeColor'] = this.changeColor;\n    if (componentOptions.includes('backgroundImage')) optionsProps['changeBackgroundImage'] = this.changeBackgroundImage;\n    const modalProps = {};\n    modalProps['attributeSelected'] = attributeSelected;\n    modalProps['onClose'] = this.handleCloseModal;\n    modalProps['style'] = attributeSelectedStyle;\n    modalProps['deleteLink'] = this.deleteLink;\n    modalProps['changeInfo'] = this.changeInfo;\n    modalProps['info'] = attributeSelectedInfo;\n    modalProps['code'] = code;\n    return /*#__PURE__*/React.createElement(UserComp, Object.assign({}, componentProps, {\n      mode: mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }), mode === \"edit\" && /*#__PURE__*/React.createElement(OptionsBar, Object.assign({}, optionsProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    })), openChangeModal && /*#__PURE__*/React.createElement(ModalChangeInfo, Object.assign({}, modalProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","OptionsBar","ModalChangeInfo","uuid","firebase","alias","UserComponentBase","constructor","props","handleOpenModal","e","userLayoutObj","code","attrCode","target","attributes","value","attributeInfo","findByCode","setState","openChangeModal","attributeSelected","attributeSelectedInfo","info","attributeSelectedStyle","style","handleCloseModal","changeImage","projectId","saveComponentInfoToContext","attr","file","files","size","alert","randomFileName","storageRef","storage","ref","auth","currentUser","uid","put","downloadUrl","getDownloadURL","src","addLink","targetComponentInfo","linksIds","key","type","push","parseInt","match","length","newAttr","Math","max","newInfo","fontSize","text","href","toNewPage","deleteLink","state","undefined","changeInfo","changeColor","color","saveUserComponentStyleInfoToContext","backgroundColor","changeHeight","height","changeBackgroundImage","backgroundImage","optionsModal","render","mode","moveComponent","componentOptions","deleteComponent","UserComp","componentInfo","contentStyle","componentUserOverrideStyle","userStyle","componentProps","optionsProps","includes","modalProps","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\nimport OptionsBar from '../droy/OptionsBar'\nimport ModalChangeInfo from '../droy/ModalChangeInfo'\nimport { uuid } from 'uuidv4'\nimport '../../styles/user-componentBase.css'\nimport firebase from '../../services/firebase'\nimport alias from '../../utils/alias'\n\n/* Provides all the funcions to manage all component content and style */\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      optionsModal: false,\n      attributeSelected: '',\n      attributeSelectedInfo: '',\n      attributeSelectedStyle: ''\n    }\n  }\n  \n  /* Opens the editor modal setting the target to the state */\n  handleOpenModal = (e) =>{\n    const { userLayoutObj, code  } = this.props\n    const attrCode = e.target.attributes['data-id'].value\n    const attributeInfo = alias.findByCode(userLayoutObj, code)\n    this.setState({\n      openChangeModal: true,\n      attributeSelected: attrCode,\n      attributeSelectedInfo: attributeInfo.info[attrCode],\n      attributeSelectedStyle: attributeInfo.style[attrCode]\n    })\n  }\n\n  /* Close the editor modal */\n  handleCloseModal = () =>{\n    this.setState({\n      openChangeModal: false,\n      attributeSelected: '',\n      attributeSelectedInfo: '',\n      attributeSelectedStyle: ''\n    })\n  }\n  \n  /* Uploads the recived image to Firebase Storage and updates the context */\n  changeImage = async (e) => {\n    const { projectId, code, saveComponentInfoToContext } = this.props\n    const attr = e.target.attributes['data-id'].value\n    const file = e.target.files[0]\n    if(file.size > 20000){\n      alert('Imagen demasiado grande.')\n    } else {\n      const randomFileName = uuid()\n      const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`)\n      await storageRef.put(file)\n      const downloadUrl = await storageRef.getDownloadURL()\n      saveComponentInfoToContext(code, attr, { src: downloadUrl })\n    }\n  }\n\n  /* Ads a new link in the target component and updates the context */\n  addLink = () => {\n    const { code, saveComponentInfoToContext, userLayoutObj } = this.props\n    const targetComponentInfo = alias.findByCode(userLayoutObj, code).info\n    const linksIds = [] \n    for (const key in targetComponentInfo) {\n      if(targetComponentInfo[key].type !== 'link') continue\n      linksIds.push(parseInt(key.match(/\\d+$/)[0]))\n    }\n    if(linksIds.length >= 5) return\n    let newAttr = ''\n    if(!linksIds.length) newAttr = 'link1'\n    else newAttr = `link${Math.max(...linksIds)+1}`\n    // Cambiar link por default a pagina de quienes somos de Droy\n    const newInfo = { style: { fontSize: '1rem' }, type: 'link', text: \"New link\", href: 'http://www.google.es', toNewPage:true}\n    saveComponentInfoToContext(code, newAttr, newInfo)\n  }\n\n  /* Deletes the target link in the target component and updates the context */\n  deleteLink = (e) => {\n    const { code, saveComponentInfoToContext } = this.props\n    const { attributeSelected } = this.state\n    saveComponentInfoToContext(code, attributeSelected, undefined)\n    this.handleCloseModal()\n  }\n\n  /* Recieves the new text info to set to the target component and updates the context */\n  changeInfo = (info) => {\n    const { attributeSelected } = this.state\n    const { code, saveComponentInfoToContext } = this.props\n    saveComponentInfoToContext(code, attributeSelected, info)\n    this.handleCloseModal()\n  }\n\n  /* Recieves the color HEX to set to the target componetn and updates de context */\n  changeColor = (color) => {\n    const { code, saveUserComponentStyleInfoToContext } = this.props\n    saveUserComponentStyleInfoToContext(code, {backgroundColor: color})\n  }\n\n  /* Recieves the value of de new height to set to the target component and updates de context */\n  changeHeight = (height) => {\n    const { code, saveUserComponentStyleInfoToContext } = this.props\n    saveUserComponentStyleInfoToContext(code, { height })\n  }\n\n  /* Uploads the recived image to Firebase Storage and updates the context */\n  changeBackgroundImage = async (e) => {\n    const { projectId, code, saveUserComponentStyleInfoToContext } = this.props\n    const file = e.target.files[0]\n    if(file.size > 20000){\n      alert('Imagen demasiado grande.')\n    } else {\n      const randomFileName = uuid()\n      const storageRef = firebase.storage().ref(`/${firebase.auth().currentUser.uid}/${projectId}/${randomFileName}`)\n      await storageRef.put(file)\n      const downloadUrl = await storageRef.getDownloadURL()\n      saveUserComponentStyleInfoToContext(code, { backgroundImage: `url(\"${downloadUrl}\")` })\n    }\n  } \n\n  /* Gets the real React components and pass new funcionalities */\n  render () {\n    const { mode, moveComponent, componentOptions, code, deleteComponent, userLayoutObj  } = this.props\n    const { attributeSelected, openChangeModal, attributeSelectedInfo, attributeSelectedStyle } = this.state\n    \n    const UserComp = MATCH_COMPONENTS[code]\n    const { info: componentInfo, style: contentStyle, componentUserOverrideStyle: userStyle } = alias.findByCode(userLayoutObj, code)\n    const componentProps = {}\n    componentProps['info'] = componentInfo\n    componentProps['contentStyle'] = contentStyle\n    componentProps['userStyle'] = userStyle\n    if(mode === 'edit'){\n      componentProps['openChangeModal'] = this.handleOpenModal\n      componentProps['changeImage'] = this.changeImage\n    }\n\n    const optionsProps = {}\n    optionsProps['code'] = code\n    optionsProps['deleteComponent'] = deleteComponent\n    optionsProps['moveComponent'] = moveComponent\n    optionsProps['style'] = attributeSelectedStyle\n    if(componentOptions.includes('changeHeight')) optionsProps['changeHeight'] = this.changeHeight\n    if(componentOptions.includes('addLinks')) optionsProps['addLink'] = this.addLink\n    if(componentOptions.includes('backgroundColor')) optionsProps['changeColor'] = this.changeColor\n    if(componentOptions.includes('backgroundImage')) optionsProps['changeBackgroundImage'] = this.changeBackgroundImage \n\n    const modalProps = {}\n    modalProps['attributeSelected'] = attributeSelected\n    modalProps['onClose'] = this.handleCloseModal\n    modalProps['style'] = attributeSelectedStyle\n    modalProps['deleteLink'] = this.deleteLink\n    modalProps['changeInfo'] = this.changeInfo\n    modalProps['info'] = attributeSelectedInfo\n    modalProps['code'] = code\n\n    return (\n      <UserComp {...componentProps} mode={mode}>\n        {mode === \"edit\" && <OptionsBar {...optionsProps}/>}\n        {openChangeModal && <ModalChangeInfo {...modalProps}/>}\n      </UserComp>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)\n"]},"metadata":{},"sourceType":"module"}