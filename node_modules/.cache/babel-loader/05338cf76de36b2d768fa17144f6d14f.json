{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js\";\nimport React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from '../services/firebase';\nexport const AuthContext = React.createContext();\nexport const withAuth = Comp => {\n  return class WithAuth extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, props => {\n        return /*#__PURE__*/React.createElement(Comp, Object.assign({\n          handleLogin: props.handleLogin,\n          user: props.user,\n          signUpError: props.signUpError,\n          authLoading: props.authLoading,\n          loginError: props.loginError,\n          handleSignUp: props.handleSignUp,\n          isLoggedIn: props.isLoggedIn,\n          handleLogout: props.handleLogout\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        const user = api.get('/auth/whoami');\n        console.log(2222, user);\n        this.setState({\n          user,\n          isLoggedIn: true,\n          authLoading: false\n        });\n      } catch (error) {\n        this.setState({\n          user: \"\",\n          isLoggedIn: false,\n          authLoading: false\n        });\n      }\n\n      auth.onAuthStateChanged(user => {\n        if (user) {} else {}\n      });\n    };\n\n    this.handleLogin = async ({\n      email,\n      hashedPassword\n    }) => {\n      try {\n        const {\n          history\n        } = this.props;\n        const user = await api.post('/auth/login', {\n          email,\n          hashedPassword\n        });\n        this.setState({\n          isLoggedIn: true,\n          user: user\n        });\n        history.push('/');\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: \"Incorrect user or password\"\n        });\n      }\n    };\n\n    this.handleSignUp = async ({\n      email,\n      hashedPassword,\n      name,\n      confirmationPassword\n    }) => {\n      try {\n        const {\n          history\n        } = this.props;\n\n        if (hashedPassword !== confirmationPassword || hashedPassword.lenght < 6) {\n          this.setState({\n            signUpError: 'Incorrect passwords or weak password'\n          });\n          return;\n        }\n\n        const user = await api.post('/auth/signup', {\n          email,\n          hashedPassword,\n          name\n        });\n        this.setState({\n          isLoggedIn: true,\n          user: user\n        });\n        history.push('/');\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: \"Error on signup\"\n        });\n      }\n    };\n\n    this.handleLogout = async () => {\n      try {\n        const {\n          history\n        } = this.props;\n        await api.get('/auth/logout');\n        this.setState({\n          isLoggedIn: false,\n          user: null\n        });\n        history.push('/login');\n      } catch (error) {\n        console.log('Error on logout');\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      authLoading: true,\n      loginError: \"\",\n      firebaseUser: \"\"\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      isLoggedIn,\n      user,\n      loginError,\n      authLoading,\n      signUpError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        user,\n        authLoading,\n        loginError,\n        signUpError,\n        handleLogin: this.handleLogin,\n        handleLogout: this.handleLogout,\n        handleSignUp: this.handleSignUp\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport default withRouter(AuthProvider);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js"],"names":["React","Component","api","withRouter","auth","AuthContext","createContext","withAuth","Comp","WithAuth","render","props","handleLogin","user","signUpError","authLoading","loginError","handleSignUp","isLoggedIn","handleLogout","AuthProvider","constructor","componentDidMount","get","console","log","setState","error","onAuthStateChanged","email","hashedPassword","history","post","push","name","confirmationPassword","lenght","state","firebaseUser","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from '../services/firebase'\n\nexport const AuthContext = React.createContext();\n\nexport const withAuth = (Comp) => {\n  return class WithAuth extends Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {(props) => {\n            return (\n              <Comp\n                handleLogin={props.handleLogin}\n                user={props.user}\n                signUpError={props.signUpError}\n                authLoading={props.authLoading}\n                loginError={props.loginError}\n                handleSignUp={props.handleSignUp}\n                isLoggedIn={props.isLoggedIn}\n                handleLogout={props.handleLogout}\n                {...this.props}\n              />\n            );\n          }}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      authLoading: true,\n      loginError: \"\",\n      firebaseUser: \"\"\n    };\n  }\n\n  componentDidMount = async () => {\n\n    try {\n      const user = api.get('/auth/whoami')\n      console.log(2222, user)\n      this.setState({\n        user,\n        isLoggedIn: true,\n        authLoading: false\n      })\n    } catch (error) {\n      this.setState({\n        user: \"\",\n        isLoggedIn: false,\n        authLoading: false\n      })\n    }\n\n    auth.onAuthStateChanged(user => {\n      if (user) {\n      } else {\n      }\n    });\n    }\n\n  handleLogin = async ({ email, hashedPassword }) => {\n    try {\n      const { history } = this.props\n      const user = await api.post('/auth/login', { email, hashedPassword })\n      this.setState({\n        isLoggedIn: true,\n        user: user,\n      })      \n      history.push('/')\n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: \"Incorrect user or password\"\n      })\n    }\n  }\n\n  handleSignUp = async ({ email, hashedPassword, name, confirmationPassword }) => {\n    try {\n      const { history } = this.props\n      if(hashedPassword !== confirmationPassword || hashedPassword.lenght < 6){\n        this.setState({ signUpError: 'Incorrect passwords or weak password' })\n        return\n      }\n      const user = await api.post('/auth/signup', { email, hashedPassword, name })\n      this.setState({\n        isLoggedIn: true,\n        user: user,\n      })\n      history.push('/')\n    } catch (error) {\n      console.log(error)\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: \"Error on signup\"\n      })\n    }\n  }\n\n  handleLogout = async () => {\n    try {\n      const { history } = this.props\n      await api.get('/auth/logout')\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n      })  \n      history.push('/login')\n    } catch (error) {\n      console.log('Error on logout')      \n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggedIn, user, loginError, authLoading, signUpError } = this.state;\n    return (\n      <AuthContext.Provider\n        value={{\n          isLoggedIn,\n          user,\n          authLoading,\n          loginError,\n          signUpError,\n          handleLogin: this.handleLogin,\n          handleLogout: this.handleLogout,\n          handleSignUp: this.handleSignUp\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(AuthProvider);"]},"metadata":{},"sourceType":"module"}