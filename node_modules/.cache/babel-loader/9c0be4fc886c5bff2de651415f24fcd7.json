{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js\";\nimport React, { Component } from 'react';\nimport MATCH_COMPONENTS from '../../utils/componentsMatching';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../contexts/dataContext';\nimport OptionsBar from '../droy/OptionsBar';\nimport firebase from '../../services/firebase';\nimport { uuid } from 'uuidv4';\nimport '../../styles/user-componentBase.css';\n\nclass UserComponentBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeInfo = e => {\n      const {\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const newText = prompt('Inserta el nuevo texto');\n      const attr = e.target.attributes['data-id'].value;\n      this.setState({\n        imChanged: true\n      });\n      saveComponentInfoToContext(code, attr, newText);\n    };\n\n    this.changeImage = async e => {\n      const {\n        code,\n        saveComponentInfoToContext\n      } = this.props;\n      const attr = e.target.attributes['data-id'].value;\n      const file = e.target.files[0]; // poner dentro de carpeta usuario y proyecto\n      // asi cuando borramos proyecto, borramos carpeta bucket\n\n      console.log(333, this.props);\n      const storageRef = firebase.storage().ref(`${uuid()}`);\n\n      if (file.size > 20000) {\n        alert('Imagen demasiado grande. Elige una mas peque単a o hazle un resize');\n        return;\n      }\n\n      const task = storageRef.put(file);\n      await task.on('state_changed', snapshot => {\n        let percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100; // ir ense単ando progreso en front y bloquearlo de mientras\n\n        console.log(111, percentage);\n      }, error => {\n        console.error(2222, error.message);\n      }, async () => {\n        const downloadUrl = await task.snapshot.ref.getDownloadURL();\n        saveComponentInfoToContext(code, attr, downloadUrl);\n      });\n    };\n\n    this.getComponentInfo = () => {\n      const {\n        userLayoutObj,\n        code\n      } = this.props;\n      return userLayoutObj.filter(c => c.code === code)[0].info;\n    };\n\n    this.state = {\n      imChanged: false\n    };\n  }\n\n  /* Causa que no funcione tema imagenes por la asincronia de carga... De momento comentar\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextProps.mode !== this.props.mode) return true\n    if(!nextState.imChanged) return false\n    this.setState({ imChanged: false })\n    return true\n  } */\n  render() {\n    const {\n      mode,\n      moveComponent,\n      code,\n      deleteComponent\n    } = this.props;\n    const UserComp = MATCH_COMPONENTS[code];\n    const componentProps = {\n      info: this.getComponentInfo()\n    };\n\n    if (mode === 'edit') {\n      componentProps['changeInfo'] = this.changeInfo;\n      componentProps['updateInfo'] = this.updateInfo;\n      componentProps['changeImage'] = this.changeImage;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-component-base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UserComp, Object.assign({}, componentProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), mode === \"edit\" && /*#__PURE__*/React.createElement(OptionsBar, {\n      code: code,\n      deleteComponent: deleteComponent,\n      moveComponent: moveComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 31\n      }\n    })));\n  }\n\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n};\nexport default withData(UserComponentBase);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/UserComponentBase.js"],"names":["React","Component","MATCH_COMPONENTS","PropTypes","withData","OptionsBar","firebase","uuid","UserComponentBase","constructor","props","changeInfo","e","code","saveComponentInfoToContext","newText","prompt","attr","target","attributes","value","setState","imChanged","changeImage","file","files","console","log","storageRef","storage","ref","size","alert","task","put","on","snapshot","percentage","bytesTransferred","totalBytes","error","message","downloadUrl","getDownloadURL","getComponentInfo","userLayoutObj","filter","c","info","state","render","mode","moveComponent","deleteComponent","UserComp","componentProps","updateInfo","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MATCH_COMPONENTS from '../../utils/componentsMatching'\nimport PropTypes from 'prop-types'\nimport { withData } from '../../contexts/dataContext'\nimport OptionsBar from '../droy/OptionsBar'\nimport firebase from '../../services/firebase'\nimport { uuid } from 'uuidv4'\nimport '../../styles/user-componentBase.css'\n\nclass UserComponentBase extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      imChanged: false\n    }\n  }\n\n  changeInfo = (e) => {\n    const { code, saveComponentInfoToContext } = this.props\n    const newText = prompt('Inserta el nuevo texto')\n    const attr = e.target.attributes['data-id'].value\n    this.setState({ imChanged: true })\n    saveComponentInfoToContext(code, attr, newText)\n  }\n\n  changeImage = async e => {\n    const { code, saveComponentInfoToContext } = this.props\n    const attr = e.target.attributes['data-id'].value\n    const file = e.target.files[0]\n    // poner dentro de carpeta usuario y proyecto\n    // asi cuando borramos proyecto, borramos carpeta bucket\n    console.log(333, this.props)\n    const storageRef = firebase.storage().ref(`${uuid()}`)\n    if(file.size > 20000){\n      alert('Imagen demasiado grande. Elige una mas peque単a o hazle un resize')\n      return\n    }\n    const task = storageRef.put(file)\n    await task.on('state_changed', (snapshot) => {\n      let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      // ir ense単ando progreso en front y bloquearlo de mientras\n      console.log(111, percentage)\n    }, (error) => {\n      console.error(2222, error.message)\n    }, async () => {\n      const downloadUrl = await task.snapshot.ref.getDownloadURL()\n      saveComponentInfoToContext(code, attr, downloadUrl)\n    }) \n  }\n  \n\n\n  getComponentInfo = () => {\n    const { userLayoutObj, code } = this.props\n    return userLayoutObj.filter(c => c.code === code)[0].info\n  }\n\n  /* Causa que no funcione tema imagenes por la asincronia de carga... De momento comentar\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextProps.mode !== this.props.mode) return true\n    if(!nextState.imChanged) return false\n    this.setState({ imChanged: false })\n    return true\n  } */\n  \n  \n  render () {\n    const { mode, moveComponent , code, deleteComponent  } = this.props\n    const UserComp = MATCH_COMPONENTS[code]\n    const componentProps = { info: this.getComponentInfo() }\n    if(mode === 'edit'){\n      componentProps['changeInfo'] = this.changeInfo\n      componentProps['updateInfo'] = this.updateInfo\n      componentProps['changeImage'] = this.changeImage\n    }\n    return (\n      <div className=\"user-component-base\">\n        <UserComp {...componentProps}>\n          {mode === \"edit\" && <OptionsBar code={code} deleteComponent={deleteComponent} moveComponent={moveComponent}/>}\n        </UserComp>\n      </div>\n    )\n  }\n}\n\nUserComponentBase.propTypes = {\n  code: PropTypes.string\n}\n\nexport default withData(UserComponentBase)"]},"metadata":{},"sourceType":"module"}