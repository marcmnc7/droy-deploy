{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/deploy/src/pages/Builder.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../contexts/dataContext';\nimport PropTypes from 'prop-types';\nimport UserComponentBase from '../components/droy/UserComponentBase';\nimport ComponentsSelectorBar from '../components/droy/ComponentsSelectorBar';\nimport NavBar from '../components/droy/NavBar';\nimport Loading from '../components/droy/Loading';\nimport '../styles/builder.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const {\n        match,\n        getProjectInfo\n      } = this.props;\n      await getProjectInfo(window.location.hostname.split('.')[0]);\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.showUserComponents = () => {\n      const {\n        userLayoutObj,\n        dataError\n      } = this.props;\n      if (!userLayoutObj.length) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty-component-base\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"image-emptyBuilder\",\n        src: \"/img/empty-icon.png\",\n        alt: \"empty-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-noComponents\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, \"Start picking one component from the left!\"));\n      if (dataError) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }\n      }, dataError);\n      const allComponents = [];\n\n      if (this.props.mode === 'edit') {\n        let i = 0;\n\n        for (const c of userLayoutObj) {\n          allComponents.push( /*#__PURE__*/React.createElement(Draggable, {\n            key: c.code,\n            draggableId: c.code,\n            index: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }\n          }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(UserComponentBase, {\n            componentStyle: c.componentStyle,\n            componentOptions: c.componentOptions,\n            code: c.code,\n            key: c.code,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }\n          }))));\n          i += 1;\n        }\n\n        return /*#__PURE__*/React.createElement(Droppable, {\n          key: i,\n          droppableId: \"droppable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }), [...allComponents], provided.placeholder));\n      } else {\n        return userLayoutObj.map(c => {\n          return /*#__PURE__*/React.createElement(UserComponentBase, {\n            componentStyle: c.componentStyle,\n            componentOptions: c.componentOptions,\n            code: c.code,\n            key: c.code,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 16\n            }\n          });\n        });\n      }\n    };\n\n    this.state = {\n      isLoading: true\n    };\n  }\n  /* Updates data context with the actual project information */\n\n\n  render() {\n    const {\n      mode\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 60\n      }\n    })), !isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components-builder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }\n    }, this.showUserComponents())));\n  }\n\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n};\nexport default withData(Builder);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/deploy/src/pages/Builder.js"],"names":["React","Component","withData","PropTypes","UserComponentBase","ComponentsSelectorBar","NavBar","Loading","DragDropContext","Droppable","Draggable","Builder","constructor","props","componentDidMount","match","getProjectInfo","window","location","hostname","split","setState","isLoading","showUserComponents","userLayoutObj","dataError","length","allComponents","mode","i","c","push","code","provided","snapshot","innerRef","draggableProps","dragHandleProps","componentStyle","componentOptions","droppableProps","placeholder","map","state","render","propTypes","array","saveInfoToContext","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../contexts/dataContext'\nimport PropTypes from 'prop-types'\nimport UserComponentBase from '../components/droy/UserComponentBase'\nimport ComponentsSelectorBar from '../components/droy/ComponentsSelectorBar'\nimport NavBar from '../components/droy/NavBar'\nimport Loading from '../components/droy/Loading'\nimport '../styles/builder.css'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n\nclass Builder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  /* Updates data context with the actual project information */\n  componentDidMount = async () => {\n    const { match, getProjectInfo } = this.props\n    await getProjectInfo(window.location.hostname.split('.')[0])\n    this.setState({ isLoading: false })\n  }\n\n  /* Loops over project info in data context to print user components */\n  /* If not components found, prints a pretty message */\n  showUserComponents = () => {\n    const { userLayoutObj, dataError } = this.props\n    if (!userLayoutObj.length) return (\n      <div className='empty-component-base'>\n        <img className='image-emptyBuilder' src='/img/empty-icon.png' alt='empty-icon' />\n        <p className='text-noComponents'>Start picking one component from the left!</p>\n      </div>)\n    if (dataError) return <div>{dataError}</div>\n\n    const allComponents = []\n    if (this.props.mode === 'edit') {\n      let i = 0\n      for (const c of userLayoutObj) {\n        allComponents.push(\n          <Draggable key={c.code} draggableId={c.code} index={i}>\n            {(provided, snapshot) => (\n              <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                <UserComponentBase componentStyle={c.componentStyle} componentOptions={c.componentOptions} code={c.code} key={c.code} />\n              </div>\n            )}\n          </Draggable>\n        )\n        i += 1\n      }\n      return (\n        <Droppable key={i} droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {[...allComponents]}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>)\n    } else {\n      return userLayoutObj.map(c => {\n        return <UserComponentBase componentStyle={c.componentStyle} componentOptions={c.componentOptions} code={c.code} key={c.code} />\n      })\n    }\n  }\n\n  render() {\n    const { mode } = this.props\n    const { isLoading } = this.state\n    return (\n      <div>\n        <div className=\"main-builder\">\n          {isLoading && <div className='loading-container'><Loading /></div>}\n          {!isLoading && <div className=\"components-builder\">{this.showUserComponents()}</div>}\n        </div>\n      </div>\n    )\n  }\n}\n\nBuilder.propTypes = {\n  userLayoutObj: PropTypes.array,\n  saveInfoToContext: PropTypes.func\n}\n\nexport default withData(Builder)\n"]},"metadata":{},"sourceType":"module"}