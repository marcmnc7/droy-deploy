{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/ComponentsSelectorBar.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../../contexts/dataContext';\nimport '../../styles/components-selectorBar.css';\nimport api from '../../services/apiClient';\nconst STATUS = {\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  ERROR: 'ERROR'\n};\n\nclass ComponentsSelectorBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      console.log('in Bar did mount');\n\n      try {\n        const {\n          projectStyle\n        } = this.props;\n        const {\n          data: styleComponents\n        } = await api.get(`/components?style=${projectStyle}`);\n        this.setState({\n          styleComponents,\n          status: STATUS.LOADED\n        });\n      } catch (error) {\n        this.setState({\n          status: STATUS.ERROR\n        });\n      }\n    };\n\n    this.showComponents = () => {\n      console.log(this.props.userLayoutObj);\n      const usedCompIds = this.props.userLayoutObj.map(c => c.code);\n      const {\n        styleComponents\n      } = this.state;\n      return styleComponents.map(c => {\n        if (!usedCompIds.includes(c.code)) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: c.code,\n            style: {\n              margin: '20px',\n              backgroundColor: 'yellow',\n              height: '50px',\n              color: 'black'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            \"data-code\": c.code,\n            onClick: this.handleAddComponent,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }, \"Add\"), c.code);\n        }\n\n        return false;\n      });\n    };\n\n    this.handleAddComponent = e => {\n      const {\n        addComponent\n      } = this.props;\n      const code = e.target.attributes['data-code'].value;\n      const defaultInfo = this.state.styleComponents.filter(c => c.code === code)[0].defaultInfo;\n      addComponent(code, defaultInfo);\n    };\n\n    this.showContent = () => {\n      const {\n        status\n      } = this.state;\n\n      switch (status) {\n        case STATUS.LOADING:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 16\n            }\n          }, \"Loading...\");\n\n        case STATUS.LOADED:\n          return this.showComponents();\n\n        case STATUS.ERROR:\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 16\n            }\n          }, \"Error\");\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      styleComponents: [],\n      status: STATUS.LOADING\n    };\n  }\n\n  render() {\n    console.log('in Bar render');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title-component-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Components:\"), this.showContent());\n  }\n\n}\n\nexport default withData(ComponentsSelectorBar);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/ComponentsSelectorBar.js"],"names":["React","Component","withData","api","STATUS","LOADING","LOADED","ERROR","ComponentsSelectorBar","constructor","props","componentDidMount","console","log","projectStyle","data","styleComponents","get","setState","status","error","showComponents","userLayoutObj","usedCompIds","map","c","code","state","includes","margin","backgroundColor","height","color","handleAddComponent","e","addComponent","target","attributes","value","defaultInfo","filter","showContent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../../contexts/dataContext'\nimport '../../styles/components-selectorBar.css'\nimport api from '../../services/apiClient'\n\nconst STATUS = {\n  LOADING: 'LOADING',\n  LOADED: 'LOADED',\n  ERROR: 'ERROR',\n}\n\nclass ComponentsSelectorBar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { styleComponents: [], status: STATUS.LOADING }\n  }\n\n  componentDidMount = async () => {\n    console.log('in Bar did mount')\n\n    try {\n      const { projectStyle } = this.props\n      const { data: styleComponents } = await api.get(`/components?style=${projectStyle}`)\n      this.setState({ styleComponents, status: STATUS.LOADED })\n    } catch (error) {\n      this.setState({ status: STATUS.ERROR })\n    }\n  }\n\n  showComponents = () => {\n    console.log(this.props.userLayoutObj)\n    const usedCompIds = this.props.userLayoutObj.map(c=>c.code)\n    const { styleComponents } = this.state\n    return styleComponents.map(c => {\n      if (!usedCompIds.includes(c.code)) {\n        return (\n          <div key={c.code} style={{ margin: '20px', backgroundColor: 'yellow', height: '50px', color: 'black' }}>\n            <button data-code={c.code} onClick={this.handleAddComponent}>Add</button>\n            {c.code}\n          </div>)\n      }\n      return false\n    })\n  }\n\n  handleAddComponent = (e) => {\n    const { addComponent } = this.props\n    const code = e.target.attributes['data-code'].value\n    const defaultInfo = this.state.styleComponents.filter(c => c.code === code)[0].defaultInfo\n    addComponent(code, defaultInfo)\n  }\n  \n  showContent = () => {\n    const { status } = this.state\n    switch (status) {\n      case STATUS.LOADING:\n        return <div>Loading...</div>\n      case STATUS.LOADED:\n        return this.showComponents()\n      case STATUS.ERROR:\n        return <div>Error</div>\n      default:\n        break;\n    }\n  }\n\n  render() {\n    console.log('in Bar render')\n    return (\n      <div className='components-bar'>\n        <h2 className= 'title-component-bar'>Components:</h2>\n        {this.showContent()}\n      </div>\n    )\n  }\n}\n\nexport default withData(ComponentsSelectorBar)"]},"metadata":{},"sourceType":"module"}