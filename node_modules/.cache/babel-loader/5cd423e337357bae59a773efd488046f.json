{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/data.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst DataContext = React.createContext(); // Consumer Wrapper\n\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, props => {\n        console.log(props);\n        return /*#__PURE__*/React.createElement(Comp, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 20\n          }\n        }));\n      });\n    }\n\n  };\n}; // Provider def\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        test: 'test'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/data.js"],"names":["React","Component","PropTypes","DataContext","createContext","withData","Comp","WithData","render","props","console","log","DataProvider","constructor","state","children","test","propTypes","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AACtCO,IAAAA,MAAM,GAAI;AACR,0BACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,KAAD,IAAW;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,4BAAO,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAJH,CADF;AAQD;;AAVqC,GAAxC;AAYD,CAbM,C,CAeP;;AACA,MAAMG,YAAN,SAA2BX,SAA3B,CAAqC;AACnCY,EAAAA,WAAW,CAAEJ,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa,EAAb;AACD;;AAEDN,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEO,MAAAA;AAAF,QAAe,KAAKN,KAA1B;AACA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QADH,CADF;AAKD;;AAbkC;;AAgBrCH,YAAY,CAACK,SAAb,GAAyB;AACvBF,EAAAA,QAAQ,EAAEb,SAAS,CAACgB;AADG,CAAzB;AAIA,eAAeN,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DataContext = React.createContext()\n\n// Consumer Wrapper\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render () {\n      return (\n        <DataContext.Consumer>\n          { (props) => {\n            console.log(props)\n            return <Comp {...props} />\n          } }\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\n// Provider def\nclass DataProvider extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  render () {\n    const { children } = this.props\n    return (\n      <DataContext.Provider value={{ test: 'test' }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}