{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js\";\nimport React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nimport { withRouter } from \"react-router-dom\";\nimport firebase from '../services/firebase';\nimport apiClient from \"../services/apiClient\";\nimport axios from \"axios\";\nexport const AuthContext = React.createContext();\nexport const withAuth = Comp => {\n  return class WithAuth extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, props => {\n        return /*#__PURE__*/React.createElement(Comp, Object.assign({\n          handleLogin: props.handleLogin,\n          user: props.user,\n          signUpError: props.signUpError,\n          authLoading: props.authLoading,\n          loginError: props.loginError,\n          handleSignUp: props.handleSignUp,\n          handleGoogleLogin: props.handleGoogleLogin,\n          handleGoogleSignup: props.handleGoogleSignup,\n          isLoggedIn: props.isLoggedIn,\n          handleLogout: props.handleLogout\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }\n        }));\n      });\n    }\n\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        firebase.auth().onAuthStateChanged(user => {\n          if (user) {\n            this.setState({\n              user,\n              isLoggedIn: true,\n              authLoading: false\n            });\n          } else {\n            this.setState({\n              user: null,\n              isLoggedIn: false,\n              authLoading: false\n            });\n          }\n        });\n      } catch (error) {\n        this.setState({\n          user: null,\n          isLoggedIn: false,\n          authLoading: false\n        });\n      }\n    };\n\n    this.handleLogin = async ({\n      email,\n      hashedPassword\n    }) => {\n      try {\n        const {\n          history\n        } = this.props;\n        const user = await firebase.auth().signInWithEmailAndPassword('a@a.com', '123456');\n        this.setState({\n          isLoggedIn: true,\n          user\n        });\n        history.push(\"/\");\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: \"Incorrect user or password\"\n        });\n      }\n    };\n\n    this.handleGoogleSignup = async googleUser => {\n      try {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        this.setState({\n          isLoggedIn: true,\n          user\n        });\n        history.push('/');\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: \"Error on signup\"\n        });\n      }\n    };\n\n    this.handleSignUp = async ({\n      email,\n      hashedPassword,\n      name,\n      confirmationPassword\n    }) => {\n      try {\n        // confirmate password matching\n        const {\n          history\n        } = this.props;\n        const user = await firebase.auth().createUserWithEmailAndPassword(email, hashedPassword);\n        this.setState({\n          isLoggedIn: true,\n          user\n        });\n        history.push('/');\n      } catch (error) {\n        this.setState({\n          isLoggedIn: false,\n          user: null,\n          loginError: \"Error on signup\"\n        });\n      }\n    };\n\n    this.handleLogout = async () => {\n      try {\n        const {\n          history\n        } = this.props;\n        await firebase.auth().signOut();\n        this.setState({\n          isLoggedIn: false,\n          user: null\n        });\n        history.push('/login');\n      } catch (error) {\n        console.log('Error on logout');\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      authLoading: true,\n      loginError: \"\",\n      firebaseUser: \"\"\n    };\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      isLoggedIn,\n      user,\n      loginError,\n      authLoading,\n      signUpError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        user,\n        authLoading,\n        loginError,\n        signUpError,\n        handleLogin: this.handleLogin,\n        handleGoogleLogin: this.handleGoogleLogin,\n        handleGoogleSignup: this.handleGoogleSignup,\n        handleLogout: this.handleLogout,\n        handleSignUp: this.handleSignUp\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nexport default withRouter(AuthProvider);","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/authContext.js"],"names":["React","Component","api","withRouter","firebase","apiClient","axios","AuthContext","createContext","withAuth","Comp","WithAuth","render","props","handleLogin","user","signUpError","authLoading","loginError","handleSignUp","handleGoogleLogin","handleGoogleSignup","isLoggedIn","handleLogout","AuthProvider","constructor","componentDidMount","auth","onAuthStateChanged","setState","error","email","hashedPassword","history","signInWithEmailAndPassword","push","googleUser","provider","GoogleAuthProvider","name","confirmationPassword","createUserWithEmailAndPassword","signOut","console","log","state","firebaseUser","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAN,EAApB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AACtCW,IAAAA,MAAM,GAAG;AACP,0BACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,KAAD,IAAW;AACV,4BACE,oBAAC,IAAD;AACE,UAAA,WAAW,EAAEA,KAAK,CAACC,WADrB;AAEE,UAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,UAAA,WAAW,EAAEF,KAAK,CAACG,WAHrB;AAIE,UAAA,WAAW,EAAEH,KAAK,CAACI,WAJrB;AAKE,UAAA,UAAU,EAAEJ,KAAK,CAACK,UALpB;AAME,UAAA,YAAY,EAAEL,KAAK,CAACM,YANtB;AAOE,UAAA,iBAAiB,EAAEN,KAAK,CAACO,iBAP3B;AAQE,UAAA,kBAAkB,EAAEP,KAAK,CAACQ,kBAR5B;AASE,UAAA,UAAU,EAAER,KAAK,CAACS,UATpB;AAUE,UAAA,YAAY,EAAET,KAAK,CAACU;AAVtB,WAWM,KAAKV,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,OAjBH,CADF;AAqBD;;AAvBqC,GAAxC;AAyBD,CA1BM;;AA4BP,MAAMW,YAAN,SAA2BvB,SAA3B,CAAqC;AACnCwB,EAAAA,WAAW,CAACZ,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAWlBa,iBAXkB,GAWE,YAAY;AAC9B,UAAI;AACFtB,QAAAA,QAAQ,CAACuB,IAAT,GAAgBC,kBAAhB,CAAoCb,IAAD,IAAU;AAC3C,cAAIA,IAAJ,EAAU;AACR,iBAAKc,QAAL,CAAc;AACZd,cAAAA,IADY;AAEZO,cAAAA,UAAU,EAAE,IAFA;AAGZL,cAAAA,WAAW,EAAE;AAHD,aAAd;AAKD,WAND,MAMO;AACL,iBAAKY,QAAL,CAAc;AACZd,cAAAA,IAAI,EAAE,IADM;AAEZO,cAAAA,UAAU,EAAE,KAFA;AAGZL,cAAAA,WAAW,EAAE;AAHD,aAAd;AAKD;AACF,SAdD;AAeD,OAhBD,CAgBE,OAAOa,KAAP,EAAc;AACd,aAAKD,QAAL,CAAc;AACZd,UAAAA,IAAI,EAAE,IADM;AAEZO,UAAAA,UAAU,EAAE,KAFA;AAGZL,UAAAA,WAAW,EAAE;AAHD,SAAd;AAKD;AACF,KAnCiB;;AAAA,SAqClBH,WArCkB,GAqCJ,OAAO;AAAEiB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAP,KAAqC;AACjD,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAc,KAAKpB,KAAzB;AACA,cAAME,IAAI,GAAG,MAAMX,QAAQ,CAACuB,IAAT,GAAgBO,0BAAhB,CAA2C,SAA3C,EAAsD,QAAtD,CAAnB;AACA,aAAKL,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,IADA;AAEZP,UAAAA;AAFY,SAAd;AAIAkB,QAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,OARD,CAQE,OAAOL,KAAP,EAAc;AACd,aAAKD,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,KADA;AAEZP,UAAAA,IAAI,EAAE,IAFM;AAGZG,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD;AACF,KArDiB;;AAAA,SAuDlBG,kBAvDkB,GAuDG,MAAOe,UAAP,IAAsB;AACzC,UAAI;AACF,cAAMC,QAAQ,GAAG,IAAIjC,QAAQ,CAACuB,IAAT,CAAcW,kBAAlB,EAAjB;AAGA,aAAKT,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,IADA;AAEZP,UAAAA;AAFY,SAAd;AAIAkB,QAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,OATD,CASE,OAAOL,KAAP,EAAc;AACd,aAAKD,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,KADA;AAEZP,UAAAA,IAAI,EAAE,IAFM;AAGZG,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD;AACF,KAxEiB;;AAAA,SA0ElBC,YA1EkB,GA0EH,OAAO;AAAEY,MAAAA,KAAF;AAASC,MAAAA,cAAT;AAAyBO,MAAAA,IAAzB;AAA+BC,MAAAA;AAA/B,KAAP,KAAiE;AAC9E,UAAI;AACF;AACA,cAAM;AAAEP,UAAAA;AAAF,YAAc,KAAKpB,KAAzB;AACA,cAAME,IAAI,GAAG,MAAMX,QAAQ,CAACuB,IAAT,GAAgBc,8BAAhB,CAA+CV,KAA/C,EAAsDC,cAAtD,CAAnB;AACA,aAAKH,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,IADA;AAEZP,UAAAA;AAFY,SAAd;AAIAkB,QAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,OATD,CASE,OAAOL,KAAP,EAAc;AACd,aAAKD,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,KADA;AAEZP,UAAAA,IAAI,EAAE,IAFM;AAGZG,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD;AACF,KA3FiB;;AAAA,SA6FlBK,YA7FkB,GA6FH,YAAY;AACzB,UAAI;AACF,cAAM;AAAEU,UAAAA;AAAF,YAAc,KAAKpB,KAAzB;AACA,cAAMT,QAAQ,CAACuB,IAAT,GAAgBe,OAAhB,EAAN;AACA,aAAKb,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAE,KADA;AAEZP,UAAAA,IAAI,EAAE;AAFM,SAAd;AAIAkB,QAAAA,OAAO,CAACE,IAAR,CAAa,QAAb;AACD,OARD,CAQE,OAAOL,KAAP,EAAc;AACda,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF,KAzGiB;;AAEhB,SAAKC,KAAL,GAAa;AACXvB,MAAAA,UAAU,EAAE,KADD;AAEXP,MAAAA,IAAI,EAAE,IAFK;AAGXE,MAAAA,WAAW,EAAE,IAHF;AAIXC,MAAAA,UAAU,EAAE,EAJD;AAKX4B,MAAAA,YAAY,EAAE;AALH,KAAb;AAOD;;AAkGDlC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEmC,MAAAA;AAAF,QAAe,KAAKlC,KAA1B;AACA,UAAM;AAAES,MAAAA,UAAF;AAAcP,MAAAA,IAAd;AAAoBG,MAAAA,UAApB;AAAgCD,MAAAA,WAAhC;AAA6CD,MAAAA;AAA7C,QAA6D,KAAK6B,KAAxE;AACA,wBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLvB,QAAAA,UADK;AAELP,QAAAA,IAFK;AAGLE,QAAAA,WAHK;AAILC,QAAAA,UAJK;AAKLF,QAAAA,WALK;AAMLF,QAAAA,WAAW,EAAE,KAAKA,WANb;AAOLM,QAAAA,iBAAiB,EAAE,KAAKA,iBAPnB;AAQLC,QAAAA,kBAAkB,EAAE,KAAKA,kBARpB;AASLE,QAAAA,YAAY,EAAE,KAAKA,YATd;AAULJ,QAAAA,YAAY,EAAE,KAAKA;AAVd,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG4B,QAdH,CADF;AAkBD;;AAjIkC;;AAoIrC,eAAe5C,UAAU,CAACqB,YAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport api from \"../services/apiClient\";\nimport { withRouter } from \"react-router-dom\";\nimport firebase from '../services/firebase'\nimport apiClient from \"../services/apiClient\";\nimport axios from \"axios\";\n\nexport const AuthContext = React.createContext();\n\nexport const withAuth = (Comp) => {\n  return class WithAuth extends Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {(props) => {\n            return (\n              <Comp\n                handleLogin={props.handleLogin}\n                user={props.user}\n                signUpError={props.signUpError}\n                authLoading={props.authLoading}\n                loginError={props.loginError}\n                handleSignUp={props.handleSignUp}\n                handleGoogleLogin={props.handleGoogleLogin}\n                handleGoogleSignup={props.handleGoogleSignup}\n                isLoggedIn={props.isLoggedIn}\n                handleLogout={props.handleLogout}\n                {...this.props}\n              />\n            );\n          }}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n};\n\nclass AuthProvider extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      isLoggedIn: false,\n      user: null,\n      authLoading: true,\n      loginError: \"\",\n      firebaseUser: \"\"\n    };\n  }\n\n  componentDidMount = async () => {\n    try {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          this.setState({\n            user,\n            isLoggedIn: true,\n            authLoading: false\n          })\n        } else {\n          this.setState({\n            user: null,\n            isLoggedIn: false,\n            authLoading: false\n          })\n        }\n      });\n    } catch (error) {\n      this.setState({\n        user: null,\n        isLoggedIn: false,\n        authLoading: false\n      })\n    }\n  }\n\n  handleLogin = async ({ email, hashedPassword }) => {\n    try {\n      const { history } = this.props\n      const user = await firebase.auth().signInWithEmailAndPassword('a@a.com', '123456')\n      this.setState({\n        isLoggedIn: true,\n        user\n      })\n      history.push(\"/\")\n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: \"Incorrect user or password\"\n      })\n    }\n  }\n\n  handleGoogleSignup = async (googleUser) => {\n    try {\n      const provider = new firebase.auth.GoogleAuthProvider()\n      \n\n      this.setState({\n        isLoggedIn: true,\n        user,\n      })\n      history.push('/')      \n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: \"Error on signup\"\n      })\n    }\n  }\n\n  handleSignUp = async ({ email, hashedPassword, name, confirmationPassword }) => {\n    try {\n      // confirmate password matching\n      const { history } = this.props\n      const user = await firebase.auth().createUserWithEmailAndPassword(email, hashedPassword)\n      this.setState({\n        isLoggedIn: true,\n        user,\n      })\n      history.push('/')\n    } catch (error) {\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n        loginError: \"Error on signup\"\n      })\n    }\n  }\n\n  handleLogout = async () => {\n    try {\n      const { history } = this.props\n      await firebase.auth().signOut()\n      this.setState({\n        isLoggedIn: false,\n        user: null,\n      })  \n      history.push('/login')\n    } catch (error) {\n      console.log('Error on logout')      \n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggedIn, user, loginError, authLoading, signUpError } = this.state;\n    return (\n      <AuthContext.Provider\n        value={{\n          isLoggedIn,\n          user,\n          authLoading,\n          loginError,\n          signUpError,\n          handleLogin: this.handleLogin,\n          handleGoogleLogin: this.handleGoogleLogin,\n          handleGoogleSignup: this.handleGoogleSignup,\n          handleLogout: this.handleLogout,\n          handleSignUp: this.handleSignUp\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(AuthProvider);"]},"metadata":{},"sourceType":"module"}