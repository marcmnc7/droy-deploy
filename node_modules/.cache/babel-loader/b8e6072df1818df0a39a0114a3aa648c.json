{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst DataContext = React.createContext(); // Consumer Wrapper\n\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, props => /*#__PURE__*/React.createElement(Comp, Object.assign({}, this.props, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }\n      })));\n    }\n\n  };\n}; // Provider def\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.switchMode = () => {\n      const {\n        mode\n      } = this.state;\n      this.setState({\n        mode: mode === 'edit' ? 'view' : 'edit'\n      });\n    };\n\n    this.copyUserLayoutObjToContext = u => {\n      this.setState({\n        userLayoutObj: u\n      });\n    };\n\n    this.moveDownComponent = elementCode => {\n      /*\n      const { stateCopy } = {...this.state}\n      const { userLayoutObj: copyUserLayoutObjToContext } = stateCopy\n      let fromIndex = 0; let element\n      for (let i = 0; i < copyUserLayoutObjToContext.length; i++) {\n        const c = copyUserLayoutObjToContext[i];\n        if(c.code === elementCode){\n          element = c; fromIndex = i\n          break\n        }\n      }\n      if(!element) return\n      copyUserLayoutObjToContext.splice(fromIndex, 1)\n      copyUserLayoutObjToContext.splice(fromIndex + 1, 0, element)\n      // update context too\n      this.setState({ userLayoutObj: copyUserLayoutObjToContext }) */\n    };\n\n    this.saveComponentInfoToContext = (componentCode, componentAttr, attrContent) => {\n      const stateCopy = { ...this.state\n      };\n      const {\n        userLayoutObj: newUserLayoutObj\n      } = stateCopy;\n\n      for (const userObject of newUserLayoutObj) {\n        if (userObject.code === componentCode) {\n          userObject.info[componentAttr] = attrContent;\n        }\n      }\n\n      console.log(44, newUserLayoutObj);\n      this.setState({\n        userLayoutObj: newUserLayoutObj\n      });\n    };\n\n    this.save = () => {\n      console.log(\"Saving info:\", this.userLayoutObj);\n    };\n\n    this.state = {\n      mode: 'edit',\n      userLayoutObj: []\n    };\n  }\n  /* SWITCH MODES */\n\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      userLayoutObj\n    } = this;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getUserLayoutObj: this.getUserLayoutObj,\n        copyUserLayoutObjToContext: this.copyUserLayoutObjToContext,\n        switchMode: this.switchMode,\n        moveDownComponent: this.moveDownComponent,\n        save: this.save,\n        ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js"],"names":["React","Component","PropTypes","DataContext","createContext","withData","Comp","WithData","render","props","DataProvider","constructor","switchMode","mode","state","setState","copyUserLayoutObjToContext","u","userLayoutObj","moveDownComponent","elementCode","saveComponentInfoToContext","componentCode","componentAttr","attrContent","stateCopy","newUserLayoutObj","userObject","code","info","console","log","save","children","getUserLayoutObj","propTypes","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DataContext = React.createContext()\n\n// Consumer Wrapper\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render () {\n      return (\n        <DataContext.Consumer>\n          { (props) => <Comp {...this.props} {...props} /> }\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\n// Provider def\nclass DataProvider extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      mode: 'edit',\n      userLayoutObj: []\n    }\n  }\n\n  /* SWITCH MODES */\n  switchMode = () => {\n    const { mode } = this.state\n    this.setState({ mode: mode === 'edit' ? 'view': 'edit' })\n  }\n\n  \n  copyUserLayoutObjToContext = (u) => {\n    this.setState({\n      userLayoutObj: u\n    })\n  }\n  \n\n  /* COMPONENTS POSITION */\n  moveDownComponent = (elementCode) => {\n    /*\n    const { stateCopy } = {...this.state}\n    const { userLayoutObj: copyUserLayoutObjToContext } = stateCopy\n    let fromIndex = 0; let element\n    for (let i = 0; i < copyUserLayoutObjToContext.length; i++) {\n      const c = copyUserLayoutObjToContext[i];\n      if(c.code === elementCode){\n        element = c; fromIndex = i\n        break\n      }\n    }\n    if(!element) return\n    copyUserLayoutObjToContext.splice(fromIndex, 1)\n    copyUserLayoutObjToContext.splice(fromIndex + 1, 0, element)\n    // update context too\n    this.setState({ userLayoutObj: copyUserLayoutObjToContext }) */\n  }\n\n  saveComponentInfoToContext = (componentCode, componentAttr, attrContent) => {\n    const stateCopy = {...this.state}\n    const { userLayoutObj: newUserLayoutObj } = stateCopy\n    for (const userObject of newUserLayoutObj) {\n      if(userObject.code === componentCode) {\n        userObject.info[componentAttr] = attrContent\n      }\n    }\n    console.log(44, newUserLayoutObj)\n    this.setState({\n      userLayoutObj: newUserLayoutObj\n    })\n  };\n\n  save = () => {\n    console.log(\"Saving info:\", this.userLayoutObj)\n  }\n\n  render () {\n    const { children } = this.props\n    const { userLayoutObj } = this\n    \n    return (\n      <DataContext.Provider value={{\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getUserLayoutObj: this.getUserLayoutObj,\n        copyUserLayoutObjToContext: this.copyUserLayoutObjToContext,\n        switchMode: this.switchMode,\n        moveDownComponent: this.moveDownComponent,\n        save: this.save,\n        ...this.state\n        \n      }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}