{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/components/droy/NavBar.js\";\nimport React, { Component } from 'react';\nimport { withData } from '../../contexts/dataContext';\nimport PropTypes from 'prop-types';\nimport '../../styles/navBar.css';\nimport { withAuth } from '../../contexts/authContext';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSave = () => {\n      const {\n        save,\n        match\n      } = this.props;\n      save(match.params.projectId);\n    };\n\n    this.saveAnim = () => {};\n  }\n\n  render() {\n    const {\n      withOptions,\n      mode,\n      switchMode,\n      isLoggedIn,\n      handleLogout,\n      saving\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo-navBar\",\n      src: \"../../../img/logo-white.png\",\n      alt: \"logo-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    })), withOptions && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttons-navBar\",\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, saving ? this.saveAnim() : 'Save'), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttons-navBar\",\n      onClick: switchMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, mode === 'edit' ? 'View page' : 'Edit page')), isLoggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleLogout,\n      className: \"buttons-navBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Logout\") : /*#__PURE__*/React.createElement(Link, {\n      className: \"buttons-navBar\",\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Login\"));\n  }\n\n}\n\nNavBar.propTypes = {\n  withOptions: PropTypes.bool,\n  mode: PropTypes.string,\n  switchMode: PropTypes.func,\n  save: PropTypes.func,\n  isLoggedIn: PropTypes.bool,\n  handleLogout: PropTypes.func\n};\nexport default withRouter(withAuth(withData(NavBar)));","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/components/droy/NavBar.js"],"names":["React","Component","withData","PropTypes","withAuth","Link","withRouter","NavBar","handleSave","save","match","props","params","projectId","saveAnim","render","withOptions","mode","switchMode","isLoggedIn","handleLogout","saving","propTypes","bool","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,yBAAP;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE7BO,UAF6B,GAEhB,MAAM;AACjB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,KAAKC,KAA7B;AACAF,MAAAA,IAAI,CAACC,KAAK,CAACE,MAAN,CAAaC,SAAd,CAAJ;AACD,KAL4B;;AAAA,SAO7BC,QAP6B,GAOlB,MAAM,CAEhB,CAT4B;AAAA;;AAW7BC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,UAArB;AAAiCC,MAAAA,UAAjC;AAA6CC,MAAAA,YAA7C;AAA2DC,MAAAA;AAA3D,QAAsE,KAAKV,KAAjF;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAC,6BAAjC;AAA+D,MAAA,GAAG,EAAC,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIGK,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACd;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,KAAKR,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8Da,MAAM,GAAG,KAAKP,QAAL,EAAH,GAAqB,MAAzF,CADc,eAEd;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAEI,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyDD,IAAI,KAAK,MAAT,GAAkB,WAAlB,GAAgC,WAAzF,CAFc,CAJlB,EASGE,UAAU,gBACP;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAA+B,MAAA,SAAS,EAAC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,gBAEP,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,EAAE,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXN,CADF;AAeD;;AA5B4B;;AA+B/Bb,MAAM,CAACe,SAAP,GAAmB;AACjBN,EAAAA,WAAW,EAAEb,SAAS,CAACoB,IADN;AAEjBN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,MAFC;AAGjBN,EAAAA,UAAU,EAAEf,SAAS,CAACsB,IAHL;AAIjBhB,EAAAA,IAAI,EAAEN,SAAS,CAACsB,IAJC;AAKjBN,EAAAA,UAAU,EAAEhB,SAAS,CAACoB,IALL;AAMjBH,EAAAA,YAAY,EAAEjB,SAAS,CAACsB;AANP,CAAnB;AASA,eAAenB,UAAU,CAACF,QAAQ,CAACF,QAAQ,CAACK,MAAD,CAAT,CAAT,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withData } from '../../contexts/dataContext'\nimport PropTypes from 'prop-types'\nimport '../../styles/navBar.css'\nimport { withAuth } from '../../contexts/authContext'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass NavBar extends Component {\n\n  handleSave = () => {\n    const { save, match } = this.props\n    save(match.params.projectId)\n  }\n\n  saveAnim = () => {\n    \n  }\n\n  render () {\n    const { withOptions, mode, switchMode, isLoggedIn, handleLogout, saving } = this.props\n    return (\n      <div className='nav-bar'>\n        <Link to ='/' >\n          <img className='logo-navBar' src='../../../img/logo-white.png' alt='logo-white'></img>\n        </Link>\n        {withOptions && <div>\n          <button className='buttons-navBar' onClick={this.handleSave}>{saving ? this.saveAnim() : 'Save'}</button>\n          <button className='buttons-navBar' onClick={switchMode}>{mode === 'edit' ? 'View page' : 'Edit page'}</button>\n        </div>\n        }\n        {isLoggedIn\n          ? <button onClick={handleLogout} className='buttons-navBar'>Logout</button>\n          : <Link className='buttons-navBar' to=\"/login\">Login</Link> }\n      </div>\n    )\n  }\n}\n\nNavBar.propTypes = {\n  withOptions: PropTypes.bool,\n  mode: PropTypes.string,\n  switchMode: PropTypes.func,\n  save: PropTypes.func,\n  isLoggedIn: PropTypes.bool,\n  handleLogout: PropTypes.func\n}\n\nexport default withRouter(withAuth(withData(NavBar)))\n"]},"metadata":{},"sourceType":"module"}