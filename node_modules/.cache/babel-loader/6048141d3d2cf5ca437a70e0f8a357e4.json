{"ast":null,"code":"var _jsxFileName = \"/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst DataContext = React.createContext(); // Consumer Wrapper\n\nexport const withData = Comp => {\n  return class WithData extends Component {\n    render() {\n      return /*#__PURE__*/React.createElement(DataContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, props => /*#__PURE__*/React.createElement(Comp, Object.assign({}, this.props, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }\n      })));\n    }\n\n  };\n}; // Provider def\n\nclass DataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.switchMode = () => {\n      const {\n        mode\n      } = this.state;\n      this.setState({\n        mode: mode === 'edit' ? 'view' : 'edit'\n      });\n    };\n\n    this.copyUserLayoutObjToContext = u => {\n      this.userLayoutObj.length = 0; // clear array\n\n      this.userLayoutObj.push(...u);\n    };\n\n    this.saveComponentInfoToContext = (componentInfo, componentCode) => {\n      const {\n        userLayoutObj\n      } = this;\n      const existingComponent = userLayoutObj.filter(c => c.code === componentCode);\n      console.log(existingComponent);\n\n      if (existingComponent.length) {\n        console.log(2);\n        Object.assign(existingComponent, componentInfo);\n      } else {\n        console.log(1);\n        userLayoutObj.push({\n          info: componentInfo,\n          code: componentCode\n        });\n      }\n\n      this.userLayoutObj = userLayoutObj;\n    };\n\n    this.userLayoutObj = [];\n    this.state = {\n      mode: 'edit'\n    };\n  }\n  /* SWITCH MODES */\n\n\n  render() {\n    const {\n      children,\n      code\n    } = this.props;\n    const {\n      userLayoutObj\n    } = this;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getUserLayoutObj: this.getUserLayoutObj,\n        copyUserLayoutObjToContext: this.copyUserLayoutObjToContext,\n        switchMode: this.switchMode,\n        userLayoutObj,\n        ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default DataProvider;","map":{"version":3,"sources":["/home/ironhacker/Documents/M3/droy/src/contexts/dataContext.js"],"names":["React","Component","PropTypes","DataContext","createContext","withData","Comp","WithData","render","props","DataProvider","constructor","switchMode","mode","state","setState","copyUserLayoutObjToContext","u","userLayoutObj","length","push","saveComponentInfoToContext","componentInfo","componentCode","existingComponent","filter","c","code","console","log","Object","assign","info","children","getUserLayoutObj","propTypes","node"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DataContext = React.createContext()\n\n// Consumer Wrapper\nexport const withData = (Comp) => {\n  return class WithData extends Component {\n    render () {\n      return (\n        <DataContext.Consumer>\n          { (props) => <Comp {...this.props} {...props} /> }\n        </DataContext.Consumer>\n      )\n    }\n  }\n}\n\n// Provider def\nclass DataProvider extends Component {\n\n  constructor(props){\n    super(props)\n    this.userLayoutObj = []\n    this.state = {\n      mode: 'edit'\n    }\n  }\n\n  /* SWITCH MODES */\n  switchMode = () => {\n    const { mode } = this.state\n    this.setState({ mode: mode === 'edit' ? 'view': 'edit' })\n  }\n\n  copyUserLayoutObjToContext = (u) => {\n    this.userLayoutObj.length = 0 // clear array\n    this.userLayoutObj.push(...u)\n  }\n\n  saveComponentInfoToContext = (componentInfo, componentCode) => {\n    const { userLayoutObj } = this\n    const existingComponent = userLayoutObj.filter(c => c.code === componentCode)\n    console.log(existingComponent)\n    if(existingComponent.length) {\n      console.log(2)\n      Object.assign(existingComponent, componentInfo)\n    }\n    else {\n      console.log(1)\n      userLayoutObj.push({ info: componentInfo, code: componentCode })\n    }\n    this.userLayoutObj = userLayoutObj\n  };\n\n  render () {\n    const { children, code } = this.props\n    const { userLayoutObj } = this\n    \n    return (\n      <DataContext.Provider value={{\n        saveComponentInfoToContext: this.saveComponentInfoToContext,\n        getUserLayoutObj: this.getUserLayoutObj,\n        copyUserLayoutObjToContext: this.copyUserLayoutObjToContext,\n        switchMode: this.switchMode,\n        userLayoutObj,\n        ...this.state\n        \n      }}>\n        {children}\n      </DataContext.Provider>\n    )\n  }\n}\n\nDataProvider.propTypes = {\n  children: PropTypes.node\n}\n\nexport default DataProvider\n"]},"metadata":{},"sourceType":"module"}